ARM GAS  /tmp/ccPiCZfv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_Base_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_TIM_Base_MspInit:
  27              	.LVL0:
  28              	.LFB236:
  29              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * @file    tim.c
   4:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/tim.c ****   *          of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * @attention
   8:Core/Src/tim.c ****   *
   9:Core/Src/tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/tim.c ****   *
  12:Core/Src/tim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/tim.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/tim.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/tim.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** 
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM1 init function */
ARM GAS  /tmp/ccPiCZfv.s 			page 2


  30:Core/Src/tim.c **** void MX_TIM1_Init(void)
  31:Core/Src/tim.c **** {
  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  45:Core/Src/tim.c ****   htim1.Instance = TIM1;
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
  48:Core/Src/tim.c ****   htim1.Init.Period = 0x8CA;
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 1;
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  53:Core/Src/tim.c ****   {
  54:Core/Src/tim.c ****     Error_Handler();
  55:Core/Src/tim.c ****   }
  56:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  58:Core/Src/tim.c ****   {
  59:Core/Src/tim.c ****     Error_Handler();
  60:Core/Src/tim.c ****   }
  61:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  62:Core/Src/tim.c ****   {
  63:Core/Src/tim.c ****     Error_Handler();
  64:Core/Src/tim.c ****   }
  65:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  68:Core/Src/tim.c ****   {
  69:Core/Src/tim.c ****     Error_Handler();
  70:Core/Src/tim.c ****   }
  71:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
  74:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  75:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
  76:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  77:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  78:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  79:Core/Src/tim.c ****   {
  80:Core/Src/tim.c ****     Error_Handler();
  81:Core/Src/tim.c ****   }
  82:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  83:Core/Src/tim.c ****   {
  84:Core/Src/tim.c ****     Error_Handler();
  85:Core/Src/tim.c ****   }
  86:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
ARM GAS  /tmp/ccPiCZfv.s 			page 3


  87:Core/Src/tim.c ****   {
  88:Core/Src/tim.c ****     Error_Handler();
  89:Core/Src/tim.c ****   }
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  96:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  97:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  98:Core/Src/tim.c ****   {
  99:Core/Src/tim.c ****     Error_Handler();
 100:Core/Src/tim.c ****   }
 101:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 102:Core/Src/tim.c **** 
 103:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
 104:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c **** }
 107:Core/Src/tim.c **** 
 108:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 109:Core/Src/tim.c **** {
  30              		.loc 1 109 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  34              		.loc 1 111 3 view .LVU1
  35              		.loc 1 111 20 is_stmt 0 view .LVU2
  36 0000 0268     		ldr	r2, [r0]
  37              		.loc 1 111 5 view .LVU3
  38 0002 0E4B     		ldr	r3, .L8
  39 0004 9A42     		cmp	r2, r3
  40 0006 00D0     		beq	.L7
  41 0008 7047     		bx	lr
  42              	.L7:
 109:Core/Src/tim.c **** 
  43              		.loc 1 109 1 view .LVU4
  44 000a 00B5     		push	{lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 4
  47              		.cfi_offset 14, -4
  48 000c 83B0     		sub	sp, sp, #12
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 16
 112:Core/Src/tim.c ****   {
 113:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 116:Core/Src/tim.c ****     /* TIM1 clock enable */
 117:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
  51              		.loc 1 117 5 is_stmt 1 view .LVU5
  52              	.LBB2:
  53              		.loc 1 117 5 view .LVU6
  54 000e 0021     		movs	r1, #0
ARM GAS  /tmp/ccPiCZfv.s 			page 4


  55 0010 0191     		str	r1, [sp, #4]
  56              		.loc 1 117 5 view .LVU7
  57 0012 03F59C33 		add	r3, r3, #79872
  58 0016 5A6C     		ldr	r2, [r3, #68]
  59 0018 42F00102 		orr	r2, r2, #1
  60 001c 5A64     		str	r2, [r3, #68]
  61              		.loc 1 117 5 view .LVU8
  62 001e 5B6C     		ldr	r3, [r3, #68]
  63 0020 03F00103 		and	r3, r3, #1
  64 0024 0193     		str	r3, [sp, #4]
  65              		.loc 1 117 5 view .LVU9
  66 0026 019B     		ldr	r3, [sp, #4]
  67              	.LBE2:
  68              		.loc 1 117 5 view .LVU10
 118:Core/Src/tim.c **** 
 119:Core/Src/tim.c ****     /* TIM1 interrupt Init */
 120:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
  69              		.loc 1 120 5 view .LVU11
  70 0028 0A46     		mov	r2, r1
  71 002a 1920     		movs	r0, #25
  72              	.LVL1:
  73              		.loc 1 120 5 is_stmt 0 view .LVU12
  74 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
  75              	.LVL2:
 121:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
  76              		.loc 1 121 5 is_stmt 1 view .LVU13
  77 0030 1920     		movs	r0, #25
  78 0032 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  79              	.LVL3:
 122:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 123:Core/Src/tim.c **** 
 124:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 125:Core/Src/tim.c ****   }
 126:Core/Src/tim.c **** }
  80              		.loc 1 126 1 is_stmt 0 view .LVU14
  81 0036 03B0     		add	sp, sp, #12
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 4
  84              		@ sp needed
  85 0038 5DF804FB 		ldr	pc, [sp], #4
  86              	.L9:
  87              		.align	2
  88              	.L8:
  89 003c 00000140 		.word	1073807360
  90              		.cfi_endproc
  91              	.LFE236:
  93              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  94              		.align	1
  95              		.global	HAL_TIM_MspPostInit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	HAL_TIM_MspPostInit:
 102              	.LVL4:
 103              	.LFB237:
 127:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
ARM GAS  /tmp/ccPiCZfv.s 			page 5


 128:Core/Src/tim.c **** {
 104              		.loc 1 128 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 24
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 128 1 is_stmt 0 view .LVU16
 109 0000 00B5     		push	{lr}
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 4
 112              		.cfi_offset 14, -4
 113 0002 87B0     		sub	sp, sp, #28
 114              	.LCFI4:
 115              		.cfi_def_cfa_offset 32
 129:Core/Src/tim.c **** 
 130:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 116              		.loc 1 130 3 is_stmt 1 view .LVU17
 117              		.loc 1 130 20 is_stmt 0 view .LVU18
 118 0004 0023     		movs	r3, #0
 119 0006 0193     		str	r3, [sp, #4]
 120 0008 0293     		str	r3, [sp, #8]
 121 000a 0393     		str	r3, [sp, #12]
 122 000c 0493     		str	r3, [sp, #16]
 123 000e 0593     		str	r3, [sp, #20]
 131:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 124              		.loc 1 131 3 is_stmt 1 view .LVU19
 125              		.loc 1 131 15 is_stmt 0 view .LVU20
 126 0010 0268     		ldr	r2, [r0]
 127              		.loc 1 131 5 view .LVU21
 128 0012 114B     		ldr	r3, .L14
 129 0014 9A42     		cmp	r2, r3
 130 0016 02D0     		beq	.L13
 131              	.LVL5:
 132              	.L10:
 132:Core/Src/tim.c ****   {
 133:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 134:Core/Src/tim.c **** 
 135:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 136:Core/Src/tim.c **** 
 137:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 138:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 139:Core/Src/tim.c ****     PA8     ------> TIM1_CH1
 140:Core/Src/tim.c ****     PA9     ------> TIM1_CH2
 141:Core/Src/tim.c ****     PA10     ------> TIM1_CH3
 142:Core/Src/tim.c ****     */
 143:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 144:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 145:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 146:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 147:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 148:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 149:Core/Src/tim.c **** 
 150:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 151:Core/Src/tim.c **** 
 152:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 153:Core/Src/tim.c ****   }
 154:Core/Src/tim.c **** 
 155:Core/Src/tim.c **** }
ARM GAS  /tmp/ccPiCZfv.s 			page 6


 133              		.loc 1 155 1 view .LVU22
 134 0018 07B0     		add	sp, sp, #28
 135              	.LCFI5:
 136              		.cfi_remember_state
 137              		.cfi_def_cfa_offset 4
 138              		@ sp needed
 139 001a 5DF804FB 		ldr	pc, [sp], #4
 140              	.LVL6:
 141              	.L13:
 142              	.LCFI6:
 143              		.cfi_restore_state
 137:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 144              		.loc 1 137 5 is_stmt 1 view .LVU23
 145              	.LBB3:
 137:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 146              		.loc 1 137 5 view .LVU24
 147 001e 0021     		movs	r1, #0
 148 0020 0091     		str	r1, [sp]
 137:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 149              		.loc 1 137 5 view .LVU25
 150 0022 03F59C33 		add	r3, r3, #79872
 151 0026 1A6B     		ldr	r2, [r3, #48]
 152 0028 42F00102 		orr	r2, r2, #1
 153 002c 1A63     		str	r2, [r3, #48]
 137:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 154              		.loc 1 137 5 view .LVU26
 155 002e 1B6B     		ldr	r3, [r3, #48]
 156 0030 03F00103 		and	r3, r3, #1
 157 0034 0093     		str	r3, [sp]
 137:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 158              		.loc 1 137 5 view .LVU27
 159 0036 009B     		ldr	r3, [sp]
 160              	.LBE3:
 137:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 161              		.loc 1 137 5 view .LVU28
 143:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 162              		.loc 1 143 5 view .LVU29
 143:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 163              		.loc 1 143 25 is_stmt 0 view .LVU30
 164 0038 4FF4E063 		mov	r3, #1792
 165 003c 0193     		str	r3, [sp, #4]
 144:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 144 5 is_stmt 1 view .LVU31
 144:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 144 26 is_stmt 0 view .LVU32
 168 003e 0223     		movs	r3, #2
 169 0040 0293     		str	r3, [sp, #8]
 145:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 170              		.loc 1 145 5 is_stmt 1 view .LVU33
 145:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 171              		.loc 1 145 26 is_stmt 0 view .LVU34
 172 0042 0391     		str	r1, [sp, #12]
 146:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 173              		.loc 1 146 5 is_stmt 1 view .LVU35
 146:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 174              		.loc 1 146 27 is_stmt 0 view .LVU36
 175 0044 0323     		movs	r3, #3
ARM GAS  /tmp/ccPiCZfv.s 			page 7


 176 0046 0493     		str	r3, [sp, #16]
 147:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 177              		.loc 1 147 5 is_stmt 1 view .LVU37
 147:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 178              		.loc 1 147 31 is_stmt 0 view .LVU38
 179 0048 0123     		movs	r3, #1
 180 004a 0593     		str	r3, [sp, #20]
 148:Core/Src/tim.c **** 
 181              		.loc 1 148 5 is_stmt 1 view .LVU39
 182 004c 01A9     		add	r1, sp, #4
 183 004e 0348     		ldr	r0, .L14+4
 184              	.LVL7:
 148:Core/Src/tim.c **** 
 185              		.loc 1 148 5 is_stmt 0 view .LVU40
 186 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL8:
 188              		.loc 1 155 1 view .LVU41
 189 0054 E0E7     		b	.L10
 190              	.L15:
 191 0056 00BF     		.align	2
 192              	.L14:
 193 0058 00000140 		.word	1073807360
 194 005c 00000240 		.word	1073872896
 195              		.cfi_endproc
 196              	.LFE237:
 198              		.section	.text.MX_TIM1_Init,"ax",%progbits
 199              		.align	1
 200              		.global	MX_TIM1_Init
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	MX_TIM1_Init:
 207              	.LFB235:
  31:Core/Src/tim.c **** 
 208              		.loc 1 31 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 88
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 30B5     		push	{r4, r5, lr}
 213              	.LCFI7:
 214              		.cfi_def_cfa_offset 12
 215              		.cfi_offset 4, -12
 216              		.cfi_offset 5, -8
 217              		.cfi_offset 14, -4
 218 0002 97B0     		sub	sp, sp, #92
 219              	.LCFI8:
 220              		.cfi_def_cfa_offset 104
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 221              		.loc 1 37 3 view .LVU43
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 222              		.loc 1 37 26 is_stmt 0 view .LVU44
 223 0004 0024     		movs	r4, #0
 224 0006 1294     		str	r4, [sp, #72]
 225 0008 1394     		str	r4, [sp, #76]
 226 000a 1494     		str	r4, [sp, #80]
 227 000c 1594     		str	r4, [sp, #84]
ARM GAS  /tmp/ccPiCZfv.s 			page 8


  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 228              		.loc 1 38 3 is_stmt 1 view .LVU45
  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 229              		.loc 1 38 27 is_stmt 0 view .LVU46
 230 000e 1094     		str	r4, [sp, #64]
 231 0010 1194     		str	r4, [sp, #68]
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 232              		.loc 1 39 3 is_stmt 1 view .LVU47
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 233              		.loc 1 39 22 is_stmt 0 view .LVU48
 234 0012 0994     		str	r4, [sp, #36]
 235 0014 0A94     		str	r4, [sp, #40]
 236 0016 0B94     		str	r4, [sp, #44]
 237 0018 0C94     		str	r4, [sp, #48]
 238 001a 0D94     		str	r4, [sp, #52]
 239 001c 0E94     		str	r4, [sp, #56]
 240 001e 0F94     		str	r4, [sp, #60]
  40:Core/Src/tim.c **** 
 241              		.loc 1 40 3 is_stmt 1 view .LVU49
  40:Core/Src/tim.c **** 
 242              		.loc 1 40 34 is_stmt 0 view .LVU50
 243 0020 2025     		movs	r5, #32
 244 0022 2A46     		mov	r2, r5
 245 0024 2146     		mov	r1, r4
 246 0026 01A8     		add	r0, sp, #4
 247 0028 FFF7FEFF 		bl	memset
 248              	.LVL9:
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 249              		.loc 1 45 3 is_stmt 1 view .LVU51
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 250              		.loc 1 45 18 is_stmt 0 view .LVU52
 251 002c 3748     		ldr	r0, .L34
 252 002e 384B     		ldr	r3, .L34+4
 253 0030 0360     		str	r3, [r0]
  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 254              		.loc 1 46 3 is_stmt 1 view .LVU53
  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 255              		.loc 1 46 24 is_stmt 0 view .LVU54
 256 0032 4460     		str	r4, [r0, #4]
  47:Core/Src/tim.c ****   htim1.Init.Period = 0x8CA;
 257              		.loc 1 47 3 is_stmt 1 view .LVU55
  47:Core/Src/tim.c ****   htim1.Init.Period = 0x8CA;
 258              		.loc 1 47 26 is_stmt 0 view .LVU56
 259 0034 8560     		str	r5, [r0, #8]
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 260              		.loc 1 48 3 is_stmt 1 view .LVU57
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 261              		.loc 1 48 21 is_stmt 0 view .LVU58
 262 0036 40F6CA03 		movw	r3, #2250
 263 003a C360     		str	r3, [r0, #12]
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 1;
 264              		.loc 1 49 3 is_stmt 1 view .LVU59
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 1;
 265              		.loc 1 49 28 is_stmt 0 view .LVU60
 266 003c 0461     		str	r4, [r0, #16]
  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 267              		.loc 1 50 3 is_stmt 1 view .LVU61
ARM GAS  /tmp/ccPiCZfv.s 			page 9


  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 268              		.loc 1 50 32 is_stmt 0 view .LVU62
 269 003e 0123     		movs	r3, #1
 270 0040 4361     		str	r3, [r0, #20]
  51:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 271              		.loc 1 51 3 is_stmt 1 view .LVU63
  51:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 272              		.loc 1 51 32 is_stmt 0 view .LVU64
 273 0042 8023     		movs	r3, #128
 274 0044 8361     		str	r3, [r0, #24]
  52:Core/Src/tim.c ****   {
 275              		.loc 1 52 3 is_stmt 1 view .LVU65
  52:Core/Src/tim.c ****   {
 276              		.loc 1 52 7 is_stmt 0 view .LVU66
 277 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 278              	.LVL10:
  52:Core/Src/tim.c ****   {
 279              		.loc 1 52 6 view .LVU67
 280 004a 0028     		cmp	r0, #0
 281 004c 46D1     		bne	.L26
 282              	.L17:
  56:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 283              		.loc 1 56 3 is_stmt 1 view .LVU68
  56:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 284              		.loc 1 56 34 is_stmt 0 view .LVU69
 285 004e 4FF48053 		mov	r3, #4096
 286 0052 1293     		str	r3, [sp, #72]
  57:Core/Src/tim.c ****   {
 287              		.loc 1 57 3 is_stmt 1 view .LVU70
  57:Core/Src/tim.c ****   {
 288              		.loc 1 57 7 is_stmt 0 view .LVU71
 289 0054 12A9     		add	r1, sp, #72
 290 0056 2D48     		ldr	r0, .L34
 291 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 292              	.LVL11:
  57:Core/Src/tim.c ****   {
 293              		.loc 1 57 6 view .LVU72
 294 005c 0028     		cmp	r0, #0
 295 005e 40D1     		bne	.L27
 296              	.L18:
  61:Core/Src/tim.c ****   {
 297              		.loc 1 61 3 is_stmt 1 view .LVU73
  61:Core/Src/tim.c ****   {
 298              		.loc 1 61 7 is_stmt 0 view .LVU74
 299 0060 2A48     		ldr	r0, .L34
 300 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 301              	.LVL12:
  61:Core/Src/tim.c ****   {
 302              		.loc 1 61 6 view .LVU75
 303 0066 0028     		cmp	r0, #0
 304 0068 3ED1     		bne	.L28
 305              	.L19:
  65:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 306              		.loc 1 65 3 is_stmt 1 view .LVU76
  65:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 307              		.loc 1 65 37 is_stmt 0 view .LVU77
 308 006a 0023     		movs	r3, #0
ARM GAS  /tmp/ccPiCZfv.s 			page 10


 309 006c 1093     		str	r3, [sp, #64]
  66:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 310              		.loc 1 66 3 is_stmt 1 view .LVU78
  66:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 311              		.loc 1 66 33 is_stmt 0 view .LVU79
 312 006e 1193     		str	r3, [sp, #68]
  67:Core/Src/tim.c ****   {
 313              		.loc 1 67 3 is_stmt 1 view .LVU80
  67:Core/Src/tim.c ****   {
 314              		.loc 1 67 7 is_stmt 0 view .LVU81
 315 0070 10A9     		add	r1, sp, #64
 316 0072 2648     		ldr	r0, .L34
 317 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 318              	.LVL13:
  67:Core/Src/tim.c ****   {
 319              		.loc 1 67 6 view .LVU82
 320 0078 0028     		cmp	r0, #0
 321 007a 38D1     		bne	.L29
 322              	.L20:
  71:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 323              		.loc 1 71 3 is_stmt 1 view .LVU83
  71:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 324              		.loc 1 71 20 is_stmt 0 view .LVU84
 325 007c 6023     		movs	r3, #96
 326 007e 0993     		str	r3, [sp, #36]
  72:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 327              		.loc 1 72 3 is_stmt 1 view .LVU85
  72:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 328              		.loc 1 72 19 is_stmt 0 view .LVU86
 329 0080 0022     		movs	r2, #0
 330 0082 0A92     		str	r2, [sp, #40]
  73:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 331              		.loc 1 73 3 is_stmt 1 view .LVU87
  73:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 332              		.loc 1 73 24 is_stmt 0 view .LVU88
 333 0084 0223     		movs	r3, #2
 334 0086 0B93     		str	r3, [sp, #44]
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 335              		.loc 1 74 3 is_stmt 1 view .LVU89
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 336              		.loc 1 74 25 is_stmt 0 view .LVU90
 337 0088 0C92     		str	r2, [sp, #48]
  75:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 338              		.loc 1 75 3 is_stmt 1 view .LVU91
  75:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 339              		.loc 1 75 24 is_stmt 0 view .LVU92
 340 008a 0423     		movs	r3, #4
 341 008c 0D93     		str	r3, [sp, #52]
  76:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 342              		.loc 1 76 3 is_stmt 1 view .LVU93
  76:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 343              		.loc 1 76 25 is_stmt 0 view .LVU94
 344 008e 0E92     		str	r2, [sp, #56]
  77:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 345              		.loc 1 77 3 is_stmt 1 view .LVU95
  77:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 346              		.loc 1 77 26 is_stmt 0 view .LVU96
ARM GAS  /tmp/ccPiCZfv.s 			page 11


 347 0090 0F92     		str	r2, [sp, #60]
  78:Core/Src/tim.c ****   {
 348              		.loc 1 78 3 is_stmt 1 view .LVU97
  78:Core/Src/tim.c ****   {
 349              		.loc 1 78 7 is_stmt 0 view .LVU98
 350 0092 09A9     		add	r1, sp, #36
 351 0094 1D48     		ldr	r0, .L34
 352 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 353              	.LVL14:
  78:Core/Src/tim.c ****   {
 354              		.loc 1 78 6 view .LVU99
 355 009a 58BB     		cbnz	r0, .L30
 356              	.L21:
  82:Core/Src/tim.c ****   {
 357              		.loc 1 82 3 is_stmt 1 view .LVU100
  82:Core/Src/tim.c ****   {
 358              		.loc 1 82 7 is_stmt 0 view .LVU101
 359 009c 0422     		movs	r2, #4
 360 009e 09A9     		add	r1, sp, #36
 361 00a0 1A48     		ldr	r0, .L34
 362 00a2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 363              	.LVL15:
  82:Core/Src/tim.c ****   {
 364              		.loc 1 82 6 view .LVU102
 365 00a6 40BB     		cbnz	r0, .L31
 366              	.L22:
  86:Core/Src/tim.c ****   {
 367              		.loc 1 86 3 is_stmt 1 view .LVU103
  86:Core/Src/tim.c ****   {
 368              		.loc 1 86 7 is_stmt 0 view .LVU104
 369 00a8 0822     		movs	r2, #8
 370 00aa 09A9     		add	r1, sp, #36
 371 00ac 1748     		ldr	r0, .L34
 372 00ae FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 373              	.LVL16:
  86:Core/Src/tim.c ****   {
 374              		.loc 1 86 6 view .LVU105
 375 00b2 28BB     		cbnz	r0, .L32
 376              	.L23:
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 377              		.loc 1 90 3 is_stmt 1 view .LVU106
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 378              		.loc 1 90 40 is_stmt 0 view .LVU107
 379 00b4 0023     		movs	r3, #0
 380 00b6 0193     		str	r3, [sp, #4]
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 381              		.loc 1 91 3 is_stmt 1 view .LVU108
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 382              		.loc 1 91 41 is_stmt 0 view .LVU109
 383 00b8 0293     		str	r3, [sp, #8]
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 384              		.loc 1 92 3 is_stmt 1 view .LVU110
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 385              		.loc 1 92 34 is_stmt 0 view .LVU111
 386 00ba 0393     		str	r3, [sp, #12]
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 387              		.loc 1 93 3 is_stmt 1 view .LVU112
ARM GAS  /tmp/ccPiCZfv.s 			page 12


  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 388              		.loc 1 93 33 is_stmt 0 view .LVU113
 389 00bc 0493     		str	r3, [sp, #16]
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 390              		.loc 1 94 3 is_stmt 1 view .LVU114
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 391              		.loc 1 94 35 is_stmt 0 view .LVU115
 392 00be 0593     		str	r3, [sp, #20]
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 393              		.loc 1 95 3 is_stmt 1 view .LVU116
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 394              		.loc 1 95 38 is_stmt 0 view .LVU117
 395 00c0 4FF40052 		mov	r2, #8192
 396 00c4 0692     		str	r2, [sp, #24]
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 397              		.loc 1 96 3 is_stmt 1 view .LVU118
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 398              		.loc 1 96 40 is_stmt 0 view .LVU119
 399 00c6 0893     		str	r3, [sp, #32]
  97:Core/Src/tim.c ****   {
 400              		.loc 1 97 3 is_stmt 1 view .LVU120
  97:Core/Src/tim.c ****   {
 401              		.loc 1 97 7 is_stmt 0 view .LVU121
 402 00c8 01A9     		add	r1, sp, #4
 403 00ca 1048     		ldr	r0, .L34
 404 00cc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 405              	.LVL17:
  97:Core/Src/tim.c ****   {
 406              		.loc 1 97 6 view .LVU122
 407 00d0 C8B9     		cbnz	r0, .L33
 408              	.L24:
 104:Core/Src/tim.c **** 
 409              		.loc 1 104 3 is_stmt 1 view .LVU123
 410 00d2 0E48     		ldr	r0, .L34
 411 00d4 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 412              	.LVL18:
 106:Core/Src/tim.c **** 
 413              		.loc 1 106 1 is_stmt 0 view .LVU124
 414 00d8 17B0     		add	sp, sp, #92
 415              	.LCFI9:
 416              		.cfi_remember_state
 417              		.cfi_def_cfa_offset 12
 418              		@ sp needed
 419 00da 30BD     		pop	{r4, r5, pc}
 420              	.L26:
 421              	.LCFI10:
 422              		.cfi_restore_state
  54:Core/Src/tim.c ****   }
 423              		.loc 1 54 5 is_stmt 1 view .LVU125
 424 00dc FFF7FEFF 		bl	Error_Handler
 425              	.LVL19:
 426 00e0 B5E7     		b	.L17
 427              	.L27:
  59:Core/Src/tim.c ****   }
 428              		.loc 1 59 5 view .LVU126
 429 00e2 FFF7FEFF 		bl	Error_Handler
 430              	.LVL20:
ARM GAS  /tmp/ccPiCZfv.s 			page 13


 431 00e6 BBE7     		b	.L18
 432              	.L28:
  63:Core/Src/tim.c ****   }
 433              		.loc 1 63 5 view .LVU127
 434 00e8 FFF7FEFF 		bl	Error_Handler
 435              	.LVL21:
 436 00ec BDE7     		b	.L19
 437              	.L29:
  69:Core/Src/tim.c ****   }
 438              		.loc 1 69 5 view .LVU128
 439 00ee FFF7FEFF 		bl	Error_Handler
 440              	.LVL22:
 441 00f2 C3E7     		b	.L20
 442              	.L30:
  80:Core/Src/tim.c ****   }
 443              		.loc 1 80 5 view .LVU129
 444 00f4 FFF7FEFF 		bl	Error_Handler
 445              	.LVL23:
 446 00f8 D0E7     		b	.L21
 447              	.L31:
  84:Core/Src/tim.c ****   }
 448              		.loc 1 84 5 view .LVU130
 449 00fa FFF7FEFF 		bl	Error_Handler
 450              	.LVL24:
 451 00fe D3E7     		b	.L22
 452              	.L32:
  88:Core/Src/tim.c ****   }
 453              		.loc 1 88 5 view .LVU131
 454 0100 FFF7FEFF 		bl	Error_Handler
 455              	.LVL25:
 456 0104 D6E7     		b	.L23
 457              	.L33:
  99:Core/Src/tim.c ****   }
 458              		.loc 1 99 5 view .LVU132
 459 0106 FFF7FEFF 		bl	Error_Handler
 460              	.LVL26:
 461 010a E2E7     		b	.L24
 462              	.L35:
 463              		.align	2
 464              	.L34:
 465 010c 00000000 		.word	htim1
 466 0110 00000140 		.word	1073807360
 467              		.cfi_endproc
 468              	.LFE235:
 470              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 471              		.align	1
 472              		.global	HAL_TIM_Base_MspDeInit
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu fpv4-sp-d16
 478              	HAL_TIM_Base_MspDeInit:
 479              	.LVL27:
 480              	.LFB238:
 156:Core/Src/tim.c **** 
 157:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 158:Core/Src/tim.c **** {
ARM GAS  /tmp/ccPiCZfv.s 			page 14


 481              		.loc 1 158 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		.loc 1 158 1 is_stmt 0 view .LVU134
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI11:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 159:Core/Src/tim.c **** 
 160:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 491              		.loc 1 160 3 is_stmt 1 view .LVU135
 492              		.loc 1 160 20 is_stmt 0 view .LVU136
 493 0002 0268     		ldr	r2, [r0]
 494              		.loc 1 160 5 view .LVU137
 495 0004 064B     		ldr	r3, .L40
 496 0006 9A42     		cmp	r2, r3
 497 0008 00D0     		beq	.L39
 498              	.LVL28:
 499              	.L36:
 161:Core/Src/tim.c ****   {
 162:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 163:Core/Src/tim.c **** 
 164:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 165:Core/Src/tim.c ****     /* Peripheral clock disable */
 166:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 167:Core/Src/tim.c **** 
 168:Core/Src/tim.c ****     /* TIM1 interrupt Deinit */
 169:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_UP_TIM10_IRQn);
 170:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 171:Core/Src/tim.c **** 
 172:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 173:Core/Src/tim.c ****   }
 174:Core/Src/tim.c **** }
 500              		.loc 1 174 1 view .LVU138
 501 000a 08BD     		pop	{r3, pc}
 502              	.LVL29:
 503              	.L39:
 166:Core/Src/tim.c **** 
 504              		.loc 1 166 5 is_stmt 1 view .LVU139
 505 000c 054A     		ldr	r2, .L40+4
 506 000e 536C     		ldr	r3, [r2, #68]
 507 0010 23F00103 		bic	r3, r3, #1
 508 0014 5364     		str	r3, [r2, #68]
 169:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 509              		.loc 1 169 5 view .LVU140
 510 0016 1920     		movs	r0, #25
 511              	.LVL30:
 169:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 512              		.loc 1 169 5 is_stmt 0 view .LVU141
 513 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 514              	.LVL31:
 515              		.loc 1 174 1 view .LVU142
 516 001c F5E7     		b	.L36
 517              	.L41:
 518 001e 00BF     		.align	2
ARM GAS  /tmp/ccPiCZfv.s 			page 15


 519              	.L40:
 520 0020 00000140 		.word	1073807360
 521 0024 00380240 		.word	1073887232
 522              		.cfi_endproc
 523              	.LFE238:
 525              		.comm	htim1,72,4
 526              		.text
 527              	.Letext0:
 528              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 529              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 530              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 531              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 532              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 533              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 534              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 535              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 536              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 537              		.file 11 "Core/Inc/tim.h"
 538              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 539              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 540              		.file 14 "Core/Inc/main.h"
 541              		.file 15 "<built-in>"
ARM GAS  /tmp/ccPiCZfv.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccPiCZfv.s:18     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccPiCZfv.s:26     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccPiCZfv.s:89     .text.HAL_TIM_Base_MspInit:000000000000003c $d
     /tmp/ccPiCZfv.s:94     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccPiCZfv.s:101    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccPiCZfv.s:193    .text.HAL_TIM_MspPostInit:0000000000000058 $d
     /tmp/ccPiCZfv.s:199    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccPiCZfv.s:206    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccPiCZfv.s:465    .text.MX_TIM1_Init:000000000000010c $d
                            *COM*:0000000000000048 htim1
     /tmp/ccPiCZfv.s:471    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccPiCZfv.s:478    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccPiCZfv.s:520    .text.HAL_TIM_Base_MspDeInit:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_NVIC_DisableIRQ
