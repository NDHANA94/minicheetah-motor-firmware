ARM GAS  /tmp/ccaLnIsP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART2_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART2_UART_Init:
  27              	.LFB235:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** /* USART2 init function */
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/ccaLnIsP.s 			page 2


  31:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  32:Core/Src/usart.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  41:Core/Src/usart.c ****   huart2.Instance = USART2;
  38              		.loc 1 41 3 view .LVU1
  39              		.loc 1 41 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  42:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
  43              		.loc 1 42 3 is_stmt 1 view .LVU3
  44              		.loc 1 42 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  43:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 43 3 is_stmt 1 view .LVU5
  48              		.loc 1 43 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  44:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 44 3 is_stmt 1 view .LVU7
  52              		.loc 1 44 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  45:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 45 3 is_stmt 1 view .LVU9
  55              		.loc 1 45 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  46:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 46 3 is_stmt 1 view .LVU11
  58              		.loc 1 46 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  47:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 47 3 is_stmt 1 view .LVU13
  62              		.loc 1 47 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  48:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 48 3 is_stmt 1 view .LVU15
  65              		.loc 1 48 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
  49:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
ARM GAS  /tmp/ccaLnIsP.s 			page 3


  67              		.loc 1 49 3 is_stmt 1 view .LVU17
  68              		.loc 1 49 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 49 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  50:Core/Src/usart.c ****   {
  51:Core/Src/usart.c ****     Error_Handler();
  52:Core/Src/usart.c ****   }
  53:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  54:Core/Src/usart.c **** 
  55:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c **** }
  74              		.loc 1 57 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  51:Core/Src/usart.c ****   }
  77              		.loc 1 51 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 57 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	huart2
  86 0030 00440040 		.word	1073759232
  87              		.cfi_endproc
  88              	.LFE235:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_UART_MspInit:
  99              	.LVL2:
 100              	.LFB236:
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  60:Core/Src/usart.c **** {
 101              		.loc 1 60 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		.loc 1 60 1 is_stmt 0 view .LVU24
 106 0000 10B5     		push	{r4, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 111 0002 88B0     		sub	sp, sp, #32
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccaLnIsP.s 			page 4


  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 114              		.loc 1 62 3 is_stmt 1 view .LVU25
 115              		.loc 1 62 20 is_stmt 0 view .LVU26
 116 0004 0023     		movs	r3, #0
 117 0006 0393     		str	r3, [sp, #12]
 118 0008 0493     		str	r3, [sp, #16]
 119 000a 0593     		str	r3, [sp, #20]
 120 000c 0693     		str	r3, [sp, #24]
 121 000e 0793     		str	r3, [sp, #28]
  63:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 122              		.loc 1 63 3 is_stmt 1 view .LVU27
 123              		.loc 1 63 16 is_stmt 0 view .LVU28
 124 0010 0268     		ldr	r2, [r0]
 125              		.loc 1 63 5 view .LVU29
 126 0012 194B     		ldr	r3, .L11
 127 0014 9A42     		cmp	r2, r3
 128 0016 01D0     		beq	.L10
 129              	.LVL3:
 130              	.L7:
  64:Core/Src/usart.c ****   {
  65:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
  66:Core/Src/usart.c **** 
  67:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
  68:Core/Src/usart.c ****     /* USART2 clock enable */
  69:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
  73:Core/Src/usart.c ****     PA2     ------> USART2_TX
  74:Core/Src/usart.c ****     PA3     ------> USART2_RX
  75:Core/Src/usart.c ****     */
  76:Core/Src/usart.c ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  82:Core/Src/usart.c **** 
  83:Core/Src/usart.c ****     /* USART2 interrupt Init */
  84:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
  85:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
  86:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
  87:Core/Src/usart.c **** 
  88:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
  89:Core/Src/usart.c ****   }
  90:Core/Src/usart.c **** }
 131              		.loc 1 90 1 view .LVU30
 132 0018 08B0     		add	sp, sp, #32
 133              	.LCFI3:
 134              		.cfi_remember_state
 135              		.cfi_def_cfa_offset 8
 136              		@ sp needed
 137 001a 10BD     		pop	{r4, pc}
 138              	.LVL4:
 139              	.L10:
 140              	.LCFI4:
ARM GAS  /tmp/ccaLnIsP.s 			page 5


 141              		.cfi_restore_state
  69:Core/Src/usart.c **** 
 142              		.loc 1 69 5 is_stmt 1 view .LVU31
 143              	.LBB2:
  69:Core/Src/usart.c **** 
 144              		.loc 1 69 5 view .LVU32
 145 001c 0024     		movs	r4, #0
 146 001e 0194     		str	r4, [sp, #4]
  69:Core/Src/usart.c **** 
 147              		.loc 1 69 5 view .LVU33
 148 0020 03F5FA33 		add	r3, r3, #128000
 149 0024 1A6C     		ldr	r2, [r3, #64]
 150 0026 42F40032 		orr	r2, r2, #131072
 151 002a 1A64     		str	r2, [r3, #64]
  69:Core/Src/usart.c **** 
 152              		.loc 1 69 5 view .LVU34
 153 002c 1A6C     		ldr	r2, [r3, #64]
 154 002e 02F40032 		and	r2, r2, #131072
 155 0032 0192     		str	r2, [sp, #4]
  69:Core/Src/usart.c **** 
 156              		.loc 1 69 5 view .LVU35
 157 0034 019A     		ldr	r2, [sp, #4]
 158              	.LBE2:
  69:Core/Src/usart.c **** 
 159              		.loc 1 69 5 view .LVU36
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 160              		.loc 1 71 5 view .LVU37
 161              	.LBB3:
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 162              		.loc 1 71 5 view .LVU38
 163 0036 0294     		str	r4, [sp, #8]
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 164              		.loc 1 71 5 view .LVU39
 165 0038 1A6B     		ldr	r2, [r3, #48]
 166 003a 42F00102 		orr	r2, r2, #1
 167 003e 1A63     		str	r2, [r3, #48]
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 168              		.loc 1 71 5 view .LVU40
 169 0040 1B6B     		ldr	r3, [r3, #48]
 170 0042 03F00103 		and	r3, r3, #1
 171 0046 0293     		str	r3, [sp, #8]
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 172              		.loc 1 71 5 view .LVU41
 173 0048 029B     		ldr	r3, [sp, #8]
 174              	.LBE3:
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 175              		.loc 1 71 5 view .LVU42
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 176              		.loc 1 76 5 view .LVU43
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 177              		.loc 1 76 25 is_stmt 0 view .LVU44
 178 004a 0C23     		movs	r3, #12
 179 004c 0393     		str	r3, [sp, #12]
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 77 5 is_stmt 1 view .LVU45
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 77 26 is_stmt 0 view .LVU46
ARM GAS  /tmp/ccaLnIsP.s 			page 6


 182 004e 0223     		movs	r3, #2
 183 0050 0493     		str	r3, [sp, #16]
  78:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 184              		.loc 1 78 5 is_stmt 1 view .LVU47
  78:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 185              		.loc 1 78 26 is_stmt 0 view .LVU48
 186 0052 0594     		str	r4, [sp, #20]
  79:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 187              		.loc 1 79 5 is_stmt 1 view .LVU49
  79:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 188              		.loc 1 79 27 is_stmt 0 view .LVU50
 189 0054 0323     		movs	r3, #3
 190 0056 0693     		str	r3, [sp, #24]
  80:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 191              		.loc 1 80 5 is_stmt 1 view .LVU51
  80:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 192              		.loc 1 80 31 is_stmt 0 view .LVU52
 193 0058 0723     		movs	r3, #7
 194 005a 0793     		str	r3, [sp, #28]
  81:Core/Src/usart.c **** 
 195              		.loc 1 81 5 is_stmt 1 view .LVU53
 196 005c 03A9     		add	r1, sp, #12
 197 005e 0748     		ldr	r0, .L11+4
 198              	.LVL5:
  81:Core/Src/usart.c **** 
 199              		.loc 1 81 5 is_stmt 0 view .LVU54
 200 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL6:
  84:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 202              		.loc 1 84 5 is_stmt 1 view .LVU55
 203 0064 2246     		mov	r2, r4
 204 0066 2146     		mov	r1, r4
 205 0068 2620     		movs	r0, #38
 206 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207              	.LVL7:
  85:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 208              		.loc 1 85 5 view .LVU56
 209 006e 2620     		movs	r0, #38
 210 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 211              	.LVL8:
 212              		.loc 1 90 1 is_stmt 0 view .LVU57
 213 0074 D0E7     		b	.L7
 214              	.L12:
 215 0076 00BF     		.align	2
 216              	.L11:
 217 0078 00440040 		.word	1073759232
 218 007c 00000240 		.word	1073872896
 219              		.cfi_endproc
 220              	.LFE236:
 222              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 223              		.align	1
 224              		.global	HAL_UART_MspDeInit
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	HAL_UART_MspDeInit:
ARM GAS  /tmp/ccaLnIsP.s 			page 7


 231              	.LVL9:
 232              	.LFB237:
  91:Core/Src/usart.c **** 
  92:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  93:Core/Src/usart.c **** {
 233              		.loc 1 93 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 93 1 is_stmt 0 view .LVU59
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI5:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
  94:Core/Src/usart.c **** 
  95:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 243              		.loc 1 95 3 is_stmt 1 view .LVU60
 244              		.loc 1 95 16 is_stmt 0 view .LVU61
 245 0002 0268     		ldr	r2, [r0]
 246              		.loc 1 95 5 view .LVU62
 247 0004 084B     		ldr	r3, .L17
 248 0006 9A42     		cmp	r2, r3
 249 0008 00D0     		beq	.L16
 250              	.LVL10:
 251              	.L13:
  96:Core/Src/usart.c ****   {
  97:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
  98:Core/Src/usart.c **** 
  99:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 100:Core/Src/usart.c ****     /* Peripheral clock disable */
 101:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 104:Core/Src/usart.c ****     PA2     ------> USART2_TX
 105:Core/Src/usart.c ****     PA3     ------> USART2_RX
 106:Core/Src/usart.c ****     */
 107:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 110:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 111:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 112:Core/Src/usart.c **** 
 113:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 114:Core/Src/usart.c ****   }
 115:Core/Src/usart.c **** }
 252              		.loc 1 115 1 view .LVU63
 253 000a 08BD     		pop	{r3, pc}
 254              	.LVL11:
 255              	.L16:
 101:Core/Src/usart.c **** 
 256              		.loc 1 101 5 is_stmt 1 view .LVU64
 257 000c 074A     		ldr	r2, .L17+4
 258 000e 136C     		ldr	r3, [r2, #64]
 259 0010 23F40033 		bic	r3, r3, #131072
 260 0014 1364     		str	r3, [r2, #64]
 107:Core/Src/usart.c **** 
ARM GAS  /tmp/ccaLnIsP.s 			page 8


 261              		.loc 1 107 5 view .LVU65
 262 0016 0C21     		movs	r1, #12
 263 0018 0548     		ldr	r0, .L17+8
 264              	.LVL12:
 107:Core/Src/usart.c **** 
 265              		.loc 1 107 5 is_stmt 0 view .LVU66
 266 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 267              	.LVL13:
 110:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 268              		.loc 1 110 5 is_stmt 1 view .LVU67
 269 001e 2620     		movs	r0, #38
 270 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 271              	.LVL14:
 272              		.loc 1 115 1 is_stmt 0 view .LVU68
 273 0024 F1E7     		b	.L13
 274              	.L18:
 275 0026 00BF     		.align	2
 276              	.L17:
 277 0028 00440040 		.word	1073759232
 278 002c 00380240 		.word	1073887232
 279 0030 00000240 		.word	1073872896
 280              		.cfi_endproc
 281              	.LFE237:
 283              		.section	.text.__io_putchar,"ax",%progbits
 284              		.align	1
 285              		.global	__io_putchar
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	__io_putchar:
 292              	.LVL15:
 293              	.LFB238:
 116:Core/Src/usart.c **** 
 117:Core/Src/usart.c **** /* USER CODE BEGIN 1 */
 118:Core/Src/usart.c **** int __io_putchar(int ch) {
 294              		.loc 1 118 26 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		.loc 1 118 26 is_stmt 0 view .LVU70
 299 0000 00B5     		push	{lr}
 300              	.LCFI6:
 301              		.cfi_def_cfa_offset 4
 302              		.cfi_offset 14, -4
 303 0002 83B0     		sub	sp, sp, #12
 304              	.LCFI7:
 305              		.cfi_def_cfa_offset 16
 306 0004 0190     		str	r0, [sp, #4]
 119:Core/Src/usart.c **** HAL_UART_Transmit(&huart2, (uint8_t*)&ch, 1, 0xffff);
 307              		.loc 1 119 1 is_stmt 1 view .LVU71
 308 0006 4FF6FF73 		movw	r3, #65535
 309 000a 0122     		movs	r2, #1
 310 000c 01A9     		add	r1, sp, #4
 311 000e 0348     		ldr	r0, .L21
 312              	.LVL16:
 313              		.loc 1 119 1 is_stmt 0 view .LVU72
ARM GAS  /tmp/ccaLnIsP.s 			page 9


 314 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 315              	.LVL17:
 120:Core/Src/usart.c **** return 0;
 316              		.loc 1 120 1 is_stmt 1 view .LVU73
 121:Core/Src/usart.c **** }
 317              		.loc 1 121 1 is_stmt 0 view .LVU74
 318 0014 0020     		movs	r0, #0
 319 0016 03B0     		add	sp, sp, #12
 320              	.LCFI8:
 321              		.cfi_def_cfa_offset 4
 322              		@ sp needed
 323 0018 5DF804FB 		ldr	pc, [sp], #4
 324              	.L22:
 325              		.align	2
 326              	.L21:
 327 001c 00000000 		.word	huart2
 328              		.cfi_endproc
 329              	.LFE238:
 331              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 332              		.align	1
 333              		.global	HAL_UART_RxCpltCallback
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	HAL_UART_RxCpltCallback:
 340              	.LVL18:
 341              	.LFB239:
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 124:Core/Src/usart.c **** {
 342              		.loc 1 124 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		.loc 1 124 1 is_stmt 0 view .LVU76
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI9:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 125:Core/Src/usart.c ****   /* Prevent unused argument(s) compilation warning */
 126:Core/Src/usart.c **** 	HAL_UART_Receive_IT(&huart2, (uint8_t *)Serial2RxBuffer, 1);
 352              		.loc 1 126 2 is_stmt 1 view .LVU77
 353 0002 0122     		movs	r2, #1
 354 0004 0249     		ldr	r1, .L25
 355 0006 0348     		ldr	r0, .L25+4
 356              	.LVL19:
 357              		.loc 1 126 2 is_stmt 0 view .LVU78
 358 0008 FFF7FEFF 		bl	HAL_UART_Receive_IT
 359              	.LVL20:
 127:Core/Src/usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 128:Core/Src/usart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
 129:Core/Src/usart.c ****    */
 130:Core/Src/usart.c **** }
 360              		.loc 1 130 1 view .LVU79
 361 000c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccaLnIsP.s 			page 10


 362              	.L26:
 363 000e 00BF     		.align	2
 364              	.L25:
 365 0010 00000000 		.word	Serial2RxBuffer
 366 0014 00000000 		.word	huart2
 367              		.cfi_endproc
 368              	.LFE239:
 370              		.comm	huart2,68,4
 371              		.text
 372              	.Letext0:
 373              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 374              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 375              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 376              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 377              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 378              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 379              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 380              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 381              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 382              		.file 11 "Core/Inc/usart.h"
 383              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 384              		.file 13 "Core/Inc/main.h"
ARM GAS  /tmp/ccaLnIsP.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccaLnIsP.s:18     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccaLnIsP.s:26     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccaLnIsP.s:85     .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart2
     /tmp/ccaLnIsP.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccaLnIsP.s:98     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccaLnIsP.s:217    .text.HAL_UART_MspInit:0000000000000078 $d
     /tmp/ccaLnIsP.s:223    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccaLnIsP.s:230    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccaLnIsP.s:277    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/ccaLnIsP.s:284    .text.__io_putchar:0000000000000000 $t
     /tmp/ccaLnIsP.s:291    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccaLnIsP.s:327    .text.__io_putchar:000000000000001c $d
     /tmp/ccaLnIsP.s:332    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccaLnIsP.s:339    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccaLnIsP.s:365    .text.HAL_UART_RxCpltCallback:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_UART_Transmit
HAL_UART_Receive_IT
Serial2RxBuffer
