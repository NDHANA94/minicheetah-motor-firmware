ARM GAS  /tmp/ccOvFgs4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB239:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** 
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /// high-bandwidth 3-phase motor control for robots
  22:Core/Src/main.c **** /// Written by Ben Katz, with much inspiration from Bayley Wang, Nick Kirkby, Shane Colton, David O
  23:Core/Src/main.c **** /// Hardware documentation can be found at build-its.blogspot.com
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Header */
  26:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  27:Core/Src/main.c **** #include "main.h"
  28:Core/Src/main.c **** #include "adc.h"
  29:Core/Src/main.c **** #include "can.h"
  30:Core/Src/main.c **** #include "spi.h"
ARM GAS  /tmp/ccOvFgs4.s 			page 2


  31:Core/Src/main.c **** #include "tim.h"
  32:Core/Src/main.c **** #include "usart.h"
  33:Core/Src/main.c **** #include "gpio.h"
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  37:Core/Src/main.c **** #include "structs.h"
  38:Core/Src/main.c **** #include <stdio.h>
  39:Core/Src/main.c **** #include <string.h>
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #include "stm32f4xx_flash.h"
  42:Core/Src/main.c **** #include "flash_writer.h"
  43:Core/Src/main.c **** #include "position_sensor.h"
  44:Core/Src/main.c **** #include "preference_writer.h"
  45:Core/Src/main.c **** #include "hw_config.h"
  46:Core/Src/main.c **** #include "user_config.h"
  47:Core/Src/main.c **** #include "fsm.h"
  48:Core/Src/main.c **** #include "drv8323.h"
  49:Core/Src/main.c **** #include "foc.h"
  50:Core/Src/main.c **** #include "math_ops.h"
  51:Core/Src/main.c **** #include "calibration.h"
  52:Core/Src/main.c **** /* USER CODE END Includes */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PTD */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN PD */
  61:Core/Src/main.c **** /* USER CODE END PD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN PM */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** #define VERSION_NUM 2.0f
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PM */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE BEGIN PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Flash Registers */
  76:Core/Src/main.c **** float __float_reg[64];
  77:Core/Src/main.c **** int __int_reg[256];
  78:Core/Src/main.c **** PreferenceWriter prefs;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** int count = 0;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Structs for control, etc */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** ControllerStruct controller;
  85:Core/Src/main.c **** ObserverStruct observer;
  86:Core/Src/main.c **** COMStruct com;
  87:Core/Src/main.c **** FSMStruct state;
ARM GAS  /tmp/ccOvFgs4.s 			page 3


  88:Core/Src/main.c **** EncoderStruct comm_encoder;
  89:Core/Src/main.c **** DRVStruct drv;
  90:Core/Src/main.c **** CalStruct comm_encoder_cal;
  91:Core/Src/main.c **** CANTxMessage can_tx;
  92:Core/Src/main.c **** CANRxMessage can_rx;
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* init but don't allocate calibration arrays */
  95:Core/Src/main.c **** int *error_array = NULL;
  96:Core/Src/main.c **** int *lut_array = NULL;
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** uint8_t Serial2RxBuffer[1];
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PV */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 103:Core/Src/main.c **** void SystemClock_Config(void);
 104:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* USER CODE END PFP */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 109:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END 0 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****   * @brief  The application entry point.
 118:Core/Src/main.c ****   * @retval int
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c **** int main(void)
 121:Core/Src/main.c **** {
 122:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END 1 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 129:Core/Src/main.c ****   HAL_Init();
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END Init */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Configure the system clock */
 136:Core/Src/main.c ****   SystemClock_Config();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END SysInit */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Initialize all configured peripherals */
 143:Core/Src/main.c ****   MX_GPIO_Init();
 144:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  /tmp/ccOvFgs4.s 			page 4


 145:Core/Src/main.c ****   MX_TIM1_Init();
 146:Core/Src/main.c ****   MX_CAN1_Init();
 147:Core/Src/main.c ****   MX_SPI1_Init();
 148:Core/Src/main.c ****   MX_SPI3_Init();
 149:Core/Src/main.c ****   MX_ADC1_Init();
 150:Core/Src/main.c ****   MX_ADC2_Init();
 151:Core/Src/main.c ****   MX_ADC3_Init();
 152:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Load settings from flash */
 155:Core/Src/main.c ****   preference_writer_init(&prefs, 6);
 156:Core/Src/main.c ****   preference_writer_load(prefs);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Sanitize configs in case flash is empty*/
 159:Core/Src/main.c ****   if(E_ZERO==-1){E_ZERO = 0;}
 160:Core/Src/main.c ****   if(M_ZERO==-1){M_ZERO = 0;}
 161:Core/Src/main.c ****   if(isnan(I_BW) || I_BW==-1){I_BW = 1000;}
 162:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 163:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 164:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 165:Core/Src/main.c ****   if(CAN_MASTER==-1){CAN_MASTER = 0;}
 166:Core/Src/main.c ****   if(CAN_TIMEOUT==-1){CAN_TIMEOUT = 1000;}
 167:Core/Src/main.c ****   if(isnan(R_NOMINAL) || R_NOMINAL==-1){R_NOMINAL = 0.0f;}
 168:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 169:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 170:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 171:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 172:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 173:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 174:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 175:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 176:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 177:Core/Src/main.c ****   if(isnan(P_MIN)){P_MIN = -12.5f;}
 178:Core/Src/main.c ****   if(isnan(V_MAX)){V_MAX = 65.0f;}
 179:Core/Src/main.c ****   if(isnan(V_MIN)){V_MIN = -65.0f;}
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   printf("\r\nFirmware Version Number: %.2f\r\n", VERSION_NUM);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* Controller Setup */
 184:Core/Src/main.c ****   if(PHASE_ORDER){							// Timer channel to phase mapping
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   else{
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   init_controller_params(&controller);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* calibration "encoder" zeroing */
 194:Core/Src/main.c ****   memset(&comm_encoder_cal.cal_position, 0, sizeof(EncoderStruct));
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* commutation encoder setup */
 197:Core/Src/main.c ****   comm_encoder.m_zero = M_ZERO;
 198:Core/Src/main.c ****   comm_encoder.e_zero = E_ZERO;
 199:Core/Src/main.c ****   comm_encoder.ppairs = PPAIRS;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   if(EN_ENC_LINEARIZATION){memcpy(&comm_encoder.offset_lut, &ENCODER_LUT, sizeof(comm_encoder.offse
ARM GAS  /tmp/ccOvFgs4.s 			page 5


 202:Core/Src/main.c ****   else{memset(&comm_encoder.offset_lut, 0, sizeof(comm_encoder.offset_lut));}
 203:Core/Src/main.c ****   ps_warmup(&comm_encoder, 100);			// clear the noisy data when the encoder first turns on
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   //for(int i = 0; i<128; i++){printf("%d\r\n", comm_encoder.offset_lut[i]);}
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* Turn on ADCs */
 208:Core/Src/main.c ****   HAL_ADC_Start(&hadc1);
 209:Core/Src/main.c ****   HAL_ADC_Start(&hadc2);
 210:Core/Src/main.c ****   HAL_ADC_Start(&hadc3);
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* DRV8323 setup */
 213:Core/Src/main.c ****   HAL_GPIO_WritePin(DRV_CS, GPIO_PIN_SET ); 	// CS high
 214:Core/Src/main.c ****   HAL_GPIO_WritePin(ENABLE_PIN, GPIO_PIN_SET );
 215:Core/Src/main.c ****   HAL_Delay(1);
 216:Core/Src/main.c ****   //drv_calibrate(drv);
 217:Core/Src/main.c ****   HAL_Delay(1);
 218:Core/Src/main.c ****   drv_write_DCR(drv, 0x0, DIS_GDF_EN, 0x0, PWM_MODE_3X, 0x0, 0x0, 0x0, 0x0, 0x1);
 219:Core/Src/main.c ****   HAL_Delay(1);
 220:Core/Src/main.c ****   int CSA_GAIN;
 221:Core/Src/main.c ****   if(I_MAX <= 40.0f){CSA_GAIN = CSA_GAIN_40;}	// Up to 40A use 40X amplifier gain
 222:Core/Src/main.c ****   else{CSA_GAIN = CSA_GAIN_20;}					// From 40-60A use 20X amplifier gain.  (Make this generic in t
 223:Core/Src/main.c ****   drv_write_CSACR(drv, 0x0, 0x1, 0x0, CSA_GAIN_40, 0x0, 0x1, 0x1, 0x1, SEN_LVL_0_25);
 224:Core/Src/main.c ****   HAL_Delay(1);
 225:Core/Src/main.c ****   drv_write_CSACR(drv, 0x0, 0x1, 0x0, CSA_GAIN, 0x1, 0x0, 0x0, 0x0, SEN_LVL_0_25);
 226:Core/Src/main.c ****   HAL_Delay(1);
 227:Core/Src/main.c ****   zero_current(&controller);
 228:Core/Src/main.c ****   HAL_Delay(1);
 229:Core/Src/main.c ****   drv_write_OCPCR(drv, TRETRY_50US, DEADTIME_50NS, OCP_RETRY, OCP_DEG_8US, VDS_LVL_0_45);
 230:Core/Src/main.c ****   HAL_Delay(1);
 231:Core/Src/main.c ****   drv_disable_gd(drv);
 232:Core/Src/main.c ****   HAL_Delay(1);
 233:Core/Src/main.c ****   //drv_enable_gd(drv);   */
 234:Core/Src/main.c ****   printf("ADC A OFFSET: %d     ADC B OFFSET: %d\r\n", controller.adc_a_offset, controller.adc_b_off
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* Turn on PWM */
 237:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 238:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 239:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* CAN setup */
 242:Core/Src/main.c ****   can_rx_init(&can_rx);
 243:Core/Src/main.c ****   can_tx_init(&can_tx);
 244:Core/Src/main.c ****   HAL_CAN_Start(&CAN_H); //start CAN
 245:Core/Src/main.c ****   //__HAL_CAN_ENABLE_IT(&CAN_H, CAN_IT_RX_FIFO0_MSG_PENDING); // Start can interrupt
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* Set Interrupt Priorities */
 248:Core/Src/main.c ****   HAL_NVIC_SetPriority(PWM_ISR, 0x0,0x0); // commutation > communication
 249:Core/Src/main.c ****   HAL_NVIC_SetPriority(CAN_ISR, 0x01, 0x01);
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* Start the FSM */
 252:Core/Src/main.c ****   state.state = MENU_MODE;
 253:Core/Src/main.c ****   state.next_state = MENU_MODE;
 254:Core/Src/main.c ****   state.ready = 1;
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* Turn on interrupts */
 258:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, (uint8_t *)Serial2RxBuffer, 1);
ARM GAS  /tmp/ccOvFgs4.s 			page 6


 259:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END 2 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* Infinite loop */
 264:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 265:Core/Src/main.c ****   while (1)
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 	  HAL_Delay(100);
 269:Core/Src/main.c **** 	  drv_print_faults(drv);
 270:Core/Src/main.c **** 	 // if(state.state==MOTOR_MODE){
 271:Core/Src/main.c **** 	  	  //printf("%.2f %.2f %.2f %.2f %.2f\r\n", controller.p_des, controller.v_des, controller.kp, c
 272:Core/Src/main.c **** 	  //}
 273:Core/Src/main.c ****     /* USER CODE END WHILE */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /* USER CODE END 3 */
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /**
 281:Core/Src/main.c ****   * @brief System Clock Configuration
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** void SystemClock_Config(void)
 285:Core/Src/main.c **** {
  29              		.loc 1 285 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 286:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 286 3 view .LVU1
  43              		.loc 1 286 22 is_stmt 0 view .LVU2
  44 0004 3422     		movs	r2, #52
  45 0006 0021     		movs	r1, #0
  46 0008 07A8     		add	r0, sp, #28
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 287:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 287 3 is_stmt 1 view .LVU3
  50              		.loc 1 287 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0294     		str	r4, [sp, #8]
  53 0012 0394     		str	r4, [sp, #12]
  54 0014 0494     		str	r4, [sp, #16]
  55 0016 0594     		str	r4, [sp, #20]
  56 0018 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/ccOvFgs4.s 			page 7


 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 291 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 291 3 view .LVU6
  60 001a 0094     		str	r4, [sp]
  61              		.loc 1 291 3 view .LVU7
  62 001c 1D4B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 291 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0093     		str	r3, [sp]
  70              		.loc 1 291 3 view .LVU9
  71 002e 009B     		ldr	r3, [sp]
  72              	.LBE2:
  73              		.loc 1 291 3 view .LVU10
 292:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  74              		.loc 1 292 3 view .LVU11
  75              	.LBB3:
  76              		.loc 1 292 3 view .LVU12
  77 0030 0194     		str	r4, [sp, #4]
  78              		.loc 1 292 3 view .LVU13
  79 0032 194B     		ldr	r3, .L3+4
  80 0034 1A68     		ldr	r2, [r3]
  81 0036 42F44042 		orr	r2, r2, #49152
  82 003a 1A60     		str	r2, [r3]
  83              		.loc 1 292 3 view .LVU14
  84 003c 1B68     		ldr	r3, [r3]
  85 003e 03F44043 		and	r3, r3, #49152
  86 0042 0193     		str	r3, [sp, #4]
  87              		.loc 1 292 3 view .LVU15
  88 0044 019B     		ldr	r3, [sp, #4]
  89              	.LBE3:
  90              		.loc 1 292 3 view .LVU16
 293:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 294:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  91              		.loc 1 296 3 view .LVU17
  92              		.loc 1 296 36 is_stmt 0 view .LVU18
  93 0046 0123     		movs	r3, #1
  94 0048 0793     		str	r3, [sp, #28]
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  95              		.loc 1 297 3 is_stmt 1 view .LVU19
  96              		.loc 1 297 30 is_stmt 0 view .LVU20
  97 004a 4FF48033 		mov	r3, #65536
  98 004e 0893     		str	r3, [sp, #32]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  99              		.loc 1 298 3 is_stmt 1 view .LVU21
 100              		.loc 1 298 34 is_stmt 0 view .LVU22
 101 0050 0225     		movs	r5, #2
 102 0052 0D95     		str	r5, [sp, #52]
ARM GAS  /tmp/ccOvFgs4.s 			page 8


 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 299 3 is_stmt 1 view .LVU23
 104              		.loc 1 299 35 is_stmt 0 view .LVU24
 105 0054 4FF48003 		mov	r3, #4194304
 106 0058 0E93     		str	r3, [sp, #56]
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 107              		.loc 1 300 3 is_stmt 1 view .LVU25
 108              		.loc 1 300 30 is_stmt 0 view .LVU26
 109 005a 0423     		movs	r3, #4
 110 005c 0F93     		str	r3, [sp, #60]
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 111              		.loc 1 301 3 is_stmt 1 view .LVU27
 112              		.loc 1 301 30 is_stmt 0 view .LVU28
 113 005e B423     		movs	r3, #180
 114 0060 1093     		str	r3, [sp, #64]
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 115              		.loc 1 302 3 is_stmt 1 view .LVU29
 116              		.loc 1 302 30 is_stmt 0 view .LVU30
 117 0062 1195     		str	r5, [sp, #68]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 118              		.loc 1 303 3 is_stmt 1 view .LVU31
 119              		.loc 1 303 30 is_stmt 0 view .LVU32
 120 0064 1295     		str	r5, [sp, #72]
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 121              		.loc 1 304 3 is_stmt 1 view .LVU33
 122              		.loc 1 304 30 is_stmt 0 view .LVU34
 123 0066 1395     		str	r5, [sp, #76]
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 124              		.loc 1 305 3 is_stmt 1 view .LVU35
 125              		.loc 1 305 7 is_stmt 0 view .LVU36
 126 0068 07A8     		add	r0, sp, #28
 127 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 128              	.LVL1:
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c ****   /** Activate the Over-Drive mode
 310:Core/Src/main.c ****   */
 311:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 129              		.loc 1 311 3 is_stmt 1 view .LVU37
 130              		.loc 1 311 7 is_stmt 0 view .LVU38
 131 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 132              	.LVL2:
 312:Core/Src/main.c ****   {
 313:Core/Src/main.c ****     Error_Handler();
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 316:Core/Src/main.c ****   */
 317:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 133              		.loc 1 317 3 is_stmt 1 view .LVU39
 134              		.loc 1 317 31 is_stmt 0 view .LVU40
 135 0072 0F23     		movs	r3, #15
 136 0074 0293     		str	r3, [sp, #8]
 318:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 319:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 137              		.loc 1 319 3 is_stmt 1 view .LVU41
 138              		.loc 1 319 34 is_stmt 0 view .LVU42
ARM GAS  /tmp/ccOvFgs4.s 			page 9


 139 0076 0395     		str	r5, [sp, #12]
 320:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140              		.loc 1 320 3 is_stmt 1 view .LVU43
 141              		.loc 1 320 35 is_stmt 0 view .LVU44
 142 0078 0494     		str	r4, [sp, #16]
 321:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 143              		.loc 1 321 3 is_stmt 1 view .LVU45
 144              		.loc 1 321 36 is_stmt 0 view .LVU46
 145 007a 4FF4A053 		mov	r3, #5120
 146 007e 0593     		str	r3, [sp, #20]
 322:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 147              		.loc 1 322 3 is_stmt 1 view .LVU47
 148              		.loc 1 322 36 is_stmt 0 view .LVU48
 149 0080 4FF48053 		mov	r3, #4096
 150 0084 0693     		str	r3, [sp, #24]
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 151              		.loc 1 324 3 is_stmt 1 view .LVU49
 152              		.loc 1 324 7 is_stmt 0 view .LVU50
 153 0086 0521     		movs	r1, #5
 154 0088 02A8     		add	r0, sp, #8
 155 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 156              	.LVL3:
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c **** }
 157              		.loc 1 328 1 view .LVU51
 158 008e 15B0     		add	sp, sp, #84
 159              	.LCFI2:
 160              		.cfi_def_cfa_offset 12
 161              		@ sp needed
 162 0090 30BD     		pop	{r4, r5, pc}
 163              	.L4:
 164 0092 00BF     		.align	2
 165              	.L3:
 166 0094 00380240 		.word	1073887232
 167 0098 00700040 		.word	1073770496
 168              		.cfi_endproc
 169              	.LFE239:
 171              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 172              		.align	2
 173              	.LC0:
 174 0000 0D0A4669 		.ascii	"\015\012Firmware Version Number: %.2f\015\012\000"
 174      726D7761 
 174      72652056 
 174      65727369 
 174      6F6E204E 
 175 0022 0000     		.align	2
 176              	.LC1:
 177 0024 41444320 		.ascii	"ADC A OFFSET: %d     ADC B OFFSET: %d\015\012\000"
 177      41204F46 
 177      46534554 
 177      3A202564 
 177      20202020 
 178              		.section	.text.main,"ax",%progbits
 179              		.align	1
ARM GAS  /tmp/ccOvFgs4.s 			page 10


 180              		.global	main
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	main:
 187              	.LFB238:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 188              		.loc 1 121 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 193              	.LCFI3:
 194              		.cfi_def_cfa_offset 24
 195              		.cfi_offset 4, -24
 196              		.cfi_offset 5, -20
 197              		.cfi_offset 6, -16
 198              		.cfi_offset 7, -12
 199              		.cfi_offset 8, -8
 200              		.cfi_offset 14, -4
 201 0004 88B0     		sub	sp, sp, #32
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 56
 129:Core/Src/main.c **** 
 204              		.loc 1 129 3 view .LVU53
 205 0006 FFF7FEFF 		bl	HAL_Init
 206              	.LVL4:
 136:Core/Src/main.c **** 
 207              		.loc 1 136 3 view .LVU54
 208 000a FFF7FEFF 		bl	SystemClock_Config
 209              	.LVL5:
 143:Core/Src/main.c ****   MX_USART2_UART_Init();
 210              		.loc 1 143 3 view .LVU55
 211 000e FFF7FEFF 		bl	MX_GPIO_Init
 212              	.LVL6:
 144:Core/Src/main.c ****   MX_TIM1_Init();
 213              		.loc 1 144 3 view .LVU56
 214 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 215              	.LVL7:
 145:Core/Src/main.c ****   MX_CAN1_Init();
 216              		.loc 1 145 3 view .LVU57
 217 0016 FFF7FEFF 		bl	MX_TIM1_Init
 218              	.LVL8:
 146:Core/Src/main.c ****   MX_SPI1_Init();
 219              		.loc 1 146 3 view .LVU58
 220 001a FFF7FEFF 		bl	MX_CAN1_Init
 221              	.LVL9:
 147:Core/Src/main.c ****   MX_SPI3_Init();
 222              		.loc 1 147 3 view .LVU59
 223 001e FFF7FEFF 		bl	MX_SPI1_Init
 224              	.LVL10:
 148:Core/Src/main.c ****   MX_ADC1_Init();
 225              		.loc 1 148 3 view .LVU60
 226 0022 FFF7FEFF 		bl	MX_SPI3_Init
 227              	.LVL11:
 149:Core/Src/main.c ****   MX_ADC2_Init();
ARM GAS  /tmp/ccOvFgs4.s 			page 11


 228              		.loc 1 149 3 view .LVU61
 229 0026 FFF7FEFF 		bl	MX_ADC1_Init
 230              	.LVL12:
 150:Core/Src/main.c ****   MX_ADC3_Init();
 231              		.loc 1 150 3 view .LVU62
 232 002a FFF7FEFF 		bl	MX_ADC2_Init
 233              	.LVL13:
 151:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 234              		.loc 1 151 3 view .LVU63
 235 002e FFF7FEFF 		bl	MX_ADC3_Init
 236              	.LVL14:
 155:Core/Src/main.c ****   preference_writer_load(prefs);
 237              		.loc 1 155 3 view .LVU64
 238 0032 C64C     		ldr	r4, .L55
 239 0034 0621     		movs	r1, #6
 240 0036 2046     		mov	r0, r4
 241 0038 FFF7FEFF 		bl	preference_writer_init
 242              	.LVL15:
 156:Core/Src/main.c **** 
 243              		.loc 1 156 3 view .LVU65
 244 003c 2369     		ldr	r3, [r4, #16]
 245 003e 0093     		str	r3, [sp]
 246 0040 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 247 0044 FFF7FEFF 		bl	preference_writer_load
 248              	.LVL16:
 159:Core/Src/main.c ****   if(M_ZERO==-1){M_ZERO = 0;}
 249              		.loc 1 159 3 view .LVU66
 159:Core/Src/main.c ****   if(M_ZERO==-1){M_ZERO = 0;}
 250              		.loc 1 159 6 is_stmt 0 view .LVU67
 251 0048 C14B     		ldr	r3, .L55+4
 252 004a 5B69     		ldr	r3, [r3, #20]
 159:Core/Src/main.c ****   if(M_ZERO==-1){M_ZERO = 0;}
 253              		.loc 1 159 5 view .LVU68
 254 004c B3F1FF3F 		cmp	r3, #-1
 255 0050 00F01B82 		beq	.L46
 256              	.L6:
 160:Core/Src/main.c ****   if(isnan(I_BW) || I_BW==-1){I_BW = 1000;}
 257              		.loc 1 160 3 is_stmt 1 view .LVU69
 160:Core/Src/main.c ****   if(isnan(I_BW) || I_BW==-1){I_BW = 1000;}
 258              		.loc 1 160 6 is_stmt 0 view .LVU70
 259 0054 BE4B     		ldr	r3, .L55+4
 260 0056 1B69     		ldr	r3, [r3, #16]
 160:Core/Src/main.c ****   if(isnan(I_BW) || I_BW==-1){I_BW = 1000;}
 261              		.loc 1 160 5 view .LVU71
 262 0058 B3F1FF3F 		cmp	r3, #-1
 263 005c 00F01982 		beq	.L47
 264              	.L7:
 161:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 265              		.loc 1 161 3 is_stmt 1 view .LVU72
 161:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 266              		.loc 1 161 6 is_stmt 0 view .LVU73
 267 0060 BC4B     		ldr	r3, .L55+8
 268 0062 D3ED027A 		vldr.32	s15, [r3, #8]
 161:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 269              		.loc 1 161 5 view .LVU74
 270 0066 F4EE677A 		vcmp.f32	s15, s15
 271 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /tmp/ccOvFgs4.s 			page 12


 272 006e 06D6     		bvs	.L8
 161:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 273              		.loc 1 161 18 discriminator 2 view .LVU75
 274 0070 BFEE007A 		vmov.f32	s14, #-1.0e+0
 275 0074 F4EE477A 		vcmp.f32	s15, s14
 276 0078 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 277 007c 02D1     		bne	.L9
 278              	.L8:
 161:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 279              		.loc 1 161 31 is_stmt 1 discriminator 3 view .LVU76
 161:Core/Src/main.c ****   if(isnan(I_MAX) || I_MAX ==-1){I_MAX=40;}
 280              		.loc 1 161 36 is_stmt 0 discriminator 3 view .LVU77
 281 007e B54B     		ldr	r3, .L55+8
 282 0080 B54A     		ldr	r2, .L55+12
 283 0082 9A60     		str	r2, [r3, #8]	@ float
 284              	.L9:
 162:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 285              		.loc 1 162 3 is_stmt 1 view .LVU78
 162:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 286              		.loc 1 162 6 is_stmt 0 view .LVU79
 287 0084 B34B     		ldr	r3, .L55+8
 288 0086 D3ED037A 		vldr.32	s15, [r3, #12]
 162:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 289              		.loc 1 162 5 view .LVU80
 290 008a F4EE677A 		vcmp.f32	s15, s15
 291 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 292 0092 06D6     		bvs	.L10
 162:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 293              		.loc 1 162 19 discriminator 2 view .LVU81
 294 0094 BFEE007A 		vmov.f32	s14, #-1.0e+0
 295 0098 F4EE477A 		vcmp.f32	s15, s14
 296 009c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 297 00a0 02D1     		bne	.L11
 298              	.L10:
 162:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 299              		.loc 1 162 34 is_stmt 1 discriminator 3 view .LVU82
 162:Core/Src/main.c ****   if(isnan(I_FW_MAX) || I_FW_MAX ==-1){I_FW_MAX=0;}
 300              		.loc 1 162 39 is_stmt 0 discriminator 3 view .LVU83
 301 00a2 AC4B     		ldr	r3, .L55+8
 302 00a4 AD4A     		ldr	r2, .L55+16
 303 00a6 DA60     		str	r2, [r3, #12]	@ float
 304              	.L11:
 163:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 305              		.loc 1 163 3 is_stmt 1 view .LVU84
 163:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 306              		.loc 1 163 6 is_stmt 0 view .LVU85
 307 00a8 AA4B     		ldr	r3, .L55+8
 308 00aa D3ED067A 		vldr.32	s15, [r3, #24]
 163:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 309              		.loc 1 163 5 view .LVU86
 310 00ae F4EE677A 		vcmp.f32	s15, s15
 311 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 312 00b6 06D6     		bvs	.L12
 163:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 313              		.loc 1 163 22 discriminator 2 view .LVU87
 314 00b8 BFEE007A 		vmov.f32	s14, #-1.0e+0
 315 00bc F4EE477A 		vcmp.f32	s15, s14
ARM GAS  /tmp/ccOvFgs4.s 			page 13


 316 00c0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 317 00c4 02D1     		bne	.L13
 318              	.L12:
 163:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 319              		.loc 1 163 40 is_stmt 1 discriminator 3 view .LVU88
 163:Core/Src/main.c ****   if(CAN_ID==-1){CAN_ID = 1;}
 320              		.loc 1 163 48 is_stmt 0 discriminator 3 view .LVU89
 321 00c6 A34B     		ldr	r3, .L55+8
 322 00c8 0022     		movs	r2, #0
 323 00ca 9A61     		str	r2, [r3, #24]	@ float
 324              	.L13:
 164:Core/Src/main.c ****   if(CAN_MASTER==-1){CAN_MASTER = 0;}
 325              		.loc 1 164 3 is_stmt 1 view .LVU90
 164:Core/Src/main.c ****   if(CAN_MASTER==-1){CAN_MASTER = 0;}
 326              		.loc 1 164 6 is_stmt 0 view .LVU91
 327 00cc A04B     		ldr	r3, .L55+4
 328 00ce 5B68     		ldr	r3, [r3, #4]
 164:Core/Src/main.c ****   if(CAN_MASTER==-1){CAN_MASTER = 0;}
 329              		.loc 1 164 5 view .LVU92
 330 00d0 B3F1FF3F 		cmp	r3, #-1
 331 00d4 00F0E181 		beq	.L48
 332              	.L14:
 165:Core/Src/main.c ****   if(CAN_TIMEOUT==-1){CAN_TIMEOUT = 1000;}
 333              		.loc 1 165 3 is_stmt 1 view .LVU93
 165:Core/Src/main.c ****   if(CAN_TIMEOUT==-1){CAN_TIMEOUT = 1000;}
 334              		.loc 1 165 6 is_stmt 0 view .LVU94
 335 00d8 9D4B     		ldr	r3, .L55+4
 336 00da 9B68     		ldr	r3, [r3, #8]
 165:Core/Src/main.c ****   if(CAN_TIMEOUT==-1){CAN_TIMEOUT = 1000;}
 337              		.loc 1 165 5 view .LVU95
 338 00dc B3F1FF3F 		cmp	r3, #-1
 339 00e0 00F0DF81 		beq	.L49
 340              	.L15:
 166:Core/Src/main.c ****   if(isnan(R_NOMINAL) || R_NOMINAL==-1){R_NOMINAL = 0.0f;}
 341              		.loc 1 166 3 is_stmt 1 view .LVU96
 166:Core/Src/main.c ****   if(isnan(R_NOMINAL) || R_NOMINAL==-1){R_NOMINAL = 0.0f;}
 342              		.loc 1 166 6 is_stmt 0 view .LVU97
 343 00e4 9A4B     		ldr	r3, .L55+4
 344 00e6 DB68     		ldr	r3, [r3, #12]
 166:Core/Src/main.c ****   if(isnan(R_NOMINAL) || R_NOMINAL==-1){R_NOMINAL = 0.0f;}
 345              		.loc 1 166 5 view .LVU98
 346 00e8 B3F1FF3F 		cmp	r3, #-1
 347 00ec 00F0DD81 		beq	.L50
 348              	.L16:
 167:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 349              		.loc 1 167 3 is_stmt 1 view .LVU99
 167:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 350              		.loc 1 167 6 is_stmt 0 view .LVU100
 351 00f0 984B     		ldr	r3, .L55+8
 352 00f2 D3ED077A 		vldr.32	s15, [r3, #28]
 167:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 353              		.loc 1 167 5 view .LVU101
 354 00f6 F4EE677A 		vcmp.f32	s15, s15
 355 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 356 00fe 06D6     		bvs	.L17
 167:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 357              		.loc 1 167 23 discriminator 2 view .LVU102
ARM GAS  /tmp/ccOvFgs4.s 			page 14


 358 0100 BFEE007A 		vmov.f32	s14, #-1.0e+0
 359 0104 F4EE477A 		vcmp.f32	s15, s14
 360 0108 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 361 010c 02D1     		bne	.L18
 362              	.L17:
 167:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 363              		.loc 1 167 41 is_stmt 1 discriminator 3 view .LVU103
 167:Core/Src/main.c ****   if(isnan(TEMP_MAX) || TEMP_MAX==-1){TEMP_MAX = 125.0f;}
 364              		.loc 1 167 51 is_stmt 0 discriminator 3 view .LVU104
 365 010e 914B     		ldr	r3, .L55+8
 366 0110 0022     		movs	r2, #0
 367 0112 DA61     		str	r2, [r3, #28]	@ float
 368              	.L18:
 168:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 369              		.loc 1 168 3 is_stmt 1 view .LVU105
 168:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 370              		.loc 1 168 6 is_stmt 0 view .LVU106
 371 0114 8F4B     		ldr	r3, .L55+8
 372 0116 D3ED087A 		vldr.32	s15, [r3, #32]
 168:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 373              		.loc 1 168 5 view .LVU107
 374 011a F4EE677A 		vcmp.f32	s15, s15
 375 011e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 376 0122 06D6     		bvs	.L19
 168:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 377              		.loc 1 168 22 discriminator 2 view .LVU108
 378 0124 BFEE007A 		vmov.f32	s14, #-1.0e+0
 379 0128 F4EE477A 		vcmp.f32	s15, s14
 380 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 381 0130 02D1     		bne	.L20
 382              	.L19:
 168:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 383              		.loc 1 168 39 is_stmt 1 discriminator 3 view .LVU109
 168:Core/Src/main.c ****   if(isnan(I_MAX_CONT) || I_MAX_CONT==-1){I_MAX_CONT = 14.0f;}
 384              		.loc 1 168 48 is_stmt 0 discriminator 3 view .LVU110
 385 0132 884B     		ldr	r3, .L55+8
 386 0134 8A4A     		ldr	r2, .L55+20
 387 0136 1A62     		str	r2, [r3, #32]	@ float
 388              	.L20:
 169:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 389              		.loc 1 169 3 is_stmt 1 view .LVU111
 169:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 390              		.loc 1 169 6 is_stmt 0 view .LVU112
 391 0138 864B     		ldr	r3, .L55+8
 392 013a D3ED097A 		vldr.32	s15, [r3, #36]
 169:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 393              		.loc 1 169 5 view .LVU113
 394 013e F4EE677A 		vcmp.f32	s15, s15
 395 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 396 0146 06D6     		bvs	.L21
 169:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 397              		.loc 1 169 24 discriminator 2 view .LVU114
 398 0148 BFEE007A 		vmov.f32	s14, #-1.0e+0
 399 014c F4EE477A 		vcmp.f32	s15, s14
 400 0150 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 401 0154 02D1     		bne	.L22
 402              	.L21:
ARM GAS  /tmp/ccOvFgs4.s 			page 15


 169:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 403              		.loc 1 169 43 is_stmt 1 discriminator 3 view .LVU115
 169:Core/Src/main.c ****   if(isnan(I_CAL)||I_CAL==-1){I_CAL = 5.0f;}
 404              		.loc 1 169 54 is_stmt 0 discriminator 3 view .LVU116
 405 0156 7F4B     		ldr	r3, .L55+8
 406 0158 824A     		ldr	r2, .L55+24
 407 015a 5A62     		str	r2, [r3, #36]	@ float
 408              	.L22:
 170:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 409              		.loc 1 170 3 is_stmt 1 view .LVU117
 170:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 410              		.loc 1 170 6 is_stmt 0 view .LVU118
 411 015c 7D4B     		ldr	r3, .L55+8
 412 015e D3ED127A 		vldr.32	s15, [r3, #72]
 170:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 413              		.loc 1 170 5 view .LVU119
 414 0162 F4EE677A 		vcmp.f32	s15, s15
 415 0166 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 416 016a 06D6     		bvs	.L23
 170:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 417              		.loc 1 170 18 discriminator 2 view .LVU120
 418 016c BFEE007A 		vmov.f32	s14, #-1.0e+0
 419 0170 F4EE477A 		vcmp.f32	s15, s14
 420 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 421 0178 02D1     		bne	.L24
 422              	.L23:
 170:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 423              		.loc 1 170 31 is_stmt 1 discriminator 3 view .LVU121
 170:Core/Src/main.c ****   if(isnan(PPAIRS) || PPAIRS==-1){PPAIRS = 21.0f;}
 424              		.loc 1 170 37 is_stmt 0 discriminator 3 view .LVU122
 425 017a 764B     		ldr	r3, .L55+8
 426 017c 7A4A     		ldr	r2, .L55+28
 427 017e 9A64     		str	r2, [r3, #72]	@ float
 428              	.L24:
 171:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 429              		.loc 1 171 3 is_stmt 1 view .LVU123
 171:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 430              		.loc 1 171 6 is_stmt 0 view .LVU124
 431 0180 744B     		ldr	r3, .L55+8
 432 0182 D3ED0A7A 		vldr.32	s15, [r3, #40]
 171:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 433              		.loc 1 171 5 view .LVU125
 434 0186 F4EE677A 		vcmp.f32	s15, s15
 435 018a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 436 018e 06D6     		bvs	.L25
 171:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 437              		.loc 1 171 20 discriminator 2 view .LVU126
 438 0190 BFEE007A 		vmov.f32	s14, #-1.0e+0
 439 0194 F4EE477A 		vcmp.f32	s15, s14
 440 0198 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 441 019c 02D1     		bne	.L26
 442              	.L25:
 171:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 443              		.loc 1 171 35 is_stmt 1 discriminator 3 view .LVU127
 171:Core/Src/main.c ****   if(isnan(GR) || GR==-1){GR = 1.0f;}
 444              		.loc 1 171 42 is_stmt 0 discriminator 3 view .LVU128
 445 019e 6D4B     		ldr	r3, .L55+8
ARM GAS  /tmp/ccOvFgs4.s 			page 16


 446 01a0 724A     		ldr	r2, .L55+32
 447 01a2 9A62     		str	r2, [r3, #40]	@ float
 448              	.L26:
 172:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 449              		.loc 1 172 3 is_stmt 1 view .LVU129
 172:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 450              		.loc 1 172 6 is_stmt 0 view .LVU130
 451 01a4 6B4B     		ldr	r3, .L55+8
 452 01a6 D3ED117A 		vldr.32	s15, [r3, #68]
 172:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 453              		.loc 1 172 5 view .LVU131
 454 01aa F4EE677A 		vcmp.f32	s15, s15
 455 01ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 456 01b2 06D6     		bvs	.L27
 172:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 457              		.loc 1 172 16 discriminator 2 view .LVU132
 458 01b4 BFEE007A 		vmov.f32	s14, #-1.0e+0
 459 01b8 F4EE477A 		vcmp.f32	s15, s14
 460 01bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 461 01c0 03D1     		bne	.L28
 462              	.L27:
 172:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 463              		.loc 1 172 27 is_stmt 1 discriminator 3 view .LVU133
 172:Core/Src/main.c ****   if(isnan(KT) || KT==-1){KT = 1.0f;}
 464              		.loc 1 172 30 is_stmt 0 discriminator 3 view .LVU134
 465 01c2 644B     		ldr	r3, .L55+8
 466 01c4 4FF07E52 		mov	r2, #1065353216
 467 01c8 5A64     		str	r2, [r3, #68]	@ float
 468              	.L28:
 173:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 469              		.loc 1 173 3 is_stmt 1 view .LVU135
 173:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 470              		.loc 1 173 6 is_stmt 0 view .LVU136
 471 01ca 624B     		ldr	r3, .L55+8
 472 01cc D3ED0E7A 		vldr.32	s15, [r3, #56]
 173:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 473              		.loc 1 173 5 view .LVU137
 474 01d0 F4EE677A 		vcmp.f32	s15, s15
 475 01d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 476 01d8 06D6     		bvs	.L29
 173:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 477              		.loc 1 173 16 discriminator 2 view .LVU138
 478 01da BFEE007A 		vmov.f32	s14, #-1.0e+0
 479 01de F4EE477A 		vcmp.f32	s15, s14
 480 01e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 481 01e6 03D1     		bne	.L30
 482              	.L29:
 173:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 483              		.loc 1 173 27 is_stmt 1 discriminator 3 view .LVU139
 173:Core/Src/main.c ****   if(isnan(KP_MAX) || KP_MAX==-1){KP_MAX = 500.0f;}
 484              		.loc 1 173 30 is_stmt 0 discriminator 3 view .LVU140
 485 01e8 5A4B     		ldr	r3, .L55+8
 486 01ea 4FF07E52 		mov	r2, #1065353216
 487 01ee 9A63     		str	r2, [r3, #56]	@ float
 488              	.L30:
 174:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 489              		.loc 1 174 3 is_stmt 1 view .LVU141
ARM GAS  /tmp/ccOvFgs4.s 			page 17


 174:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 490              		.loc 1 174 6 is_stmt 0 view .LVU142
 491 01f0 584B     		ldr	r3, .L55+8
 492 01f2 D3ED177A 		vldr.32	s15, [r3, #92]
 174:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 493              		.loc 1 174 5 view .LVU143
 494 01f6 F4EE677A 		vcmp.f32	s15, s15
 495 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 496 01fe 06D6     		bvs	.L31
 174:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 497              		.loc 1 174 20 discriminator 2 view .LVU144
 498 0200 BFEE007A 		vmov.f32	s14, #-1.0e+0
 499 0204 F4EE477A 		vcmp.f32	s15, s14
 500 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 501 020c 02D1     		bne	.L32
 502              	.L31:
 174:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 503              		.loc 1 174 35 is_stmt 1 discriminator 3 view .LVU145
 174:Core/Src/main.c ****   if(isnan(KD_MAX) || KD_MAX==-1){KD_MAX = 5.0f;}
 504              		.loc 1 174 42 is_stmt 0 discriminator 3 view .LVU146
 505 020e 514B     		ldr	r3, .L55+8
 506 0210 574A     		ldr	r2, .L55+36
 507 0212 DA65     		str	r2, [r3, #92]	@ float
 508              	.L32:
 175:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 509              		.loc 1 175 3 is_stmt 1 view .LVU147
 175:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 510              		.loc 1 175 6 is_stmt 0 view .LVU148
 511 0214 4F4B     		ldr	r3, .L55+8
 512 0216 D3ED187A 		vldr.32	s15, [r3, #96]
 175:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 513              		.loc 1 175 5 view .LVU149
 514 021a F4EE677A 		vcmp.f32	s15, s15
 515 021e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 516 0222 06D6     		bvs	.L33
 175:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 517              		.loc 1 175 20 discriminator 2 view .LVU150
 518 0224 BFEE007A 		vmov.f32	s14, #-1.0e+0
 519 0228 F4EE477A 		vcmp.f32	s15, s14
 520 022c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 521 0230 02D1     		bne	.L34
 522              	.L33:
 175:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 523              		.loc 1 175 35 is_stmt 1 discriminator 3 view .LVU151
 175:Core/Src/main.c ****   if(isnan(P_MAX)){P_MAX = 12.5f;}
 524              		.loc 1 175 42 is_stmt 0 discriminator 3 view .LVU152
 525 0232 484B     		ldr	r3, .L55+8
 526 0234 4C4A     		ldr	r2, .L55+28
 527 0236 1A66     		str	r2, [r3, #96]	@ float
 528              	.L34:
 176:Core/Src/main.c ****   if(isnan(P_MIN)){P_MIN = -12.5f;}
 529              		.loc 1 176 3 is_stmt 1 view .LVU153
 176:Core/Src/main.c ****   if(isnan(P_MIN)){P_MIN = -12.5f;}
 530              		.loc 1 176 6 is_stmt 0 view .LVU154
 531 0238 464B     		ldr	r3, .L55+8
 532 023a D3ED147A 		vldr.32	s15, [r3, #80]
 176:Core/Src/main.c ****   if(isnan(P_MIN)){P_MIN = -12.5f;}
ARM GAS  /tmp/ccOvFgs4.s 			page 18


 533              		.loc 1 176 5 view .LVU155
 534 023e F4EE677A 		vcmp.f32	s15, s15
 535 0242 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 536 0246 80F13581 		bvs	.L51
 537              	.L35:
 177:Core/Src/main.c ****   if(isnan(V_MAX)){V_MAX = 65.0f;}
 538              		.loc 1 177 3 is_stmt 1 view .LVU156
 177:Core/Src/main.c ****   if(isnan(V_MAX)){V_MAX = 65.0f;}
 539              		.loc 1 177 6 is_stmt 0 view .LVU157
 540 024a 424B     		ldr	r3, .L55+8
 541 024c D3ED137A 		vldr.32	s15, [r3, #76]
 177:Core/Src/main.c ****   if(isnan(V_MAX)){V_MAX = 65.0f;}
 542              		.loc 1 177 5 view .LVU158
 543 0250 F4EE677A 		vcmp.f32	s15, s15
 544 0254 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 545 0258 80F12F81 		bvs	.L52
 546              	.L36:
 178:Core/Src/main.c ****   if(isnan(V_MIN)){V_MIN = -65.0f;}
 547              		.loc 1 178 3 is_stmt 1 view .LVU159
 178:Core/Src/main.c ****   if(isnan(V_MIN)){V_MIN = -65.0f;}
 548              		.loc 1 178 6 is_stmt 0 view .LVU160
 549 025c 3D4B     		ldr	r3, .L55+8
 550 025e D3ED167A 		vldr.32	s15, [r3, #88]
 178:Core/Src/main.c ****   if(isnan(V_MIN)){V_MIN = -65.0f;}
 551              		.loc 1 178 5 view .LVU161
 552 0262 F4EE677A 		vcmp.f32	s15, s15
 553 0266 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 554 026a 80F12981 		bvs	.L53
 555              	.L37:
 179:Core/Src/main.c **** 
 556              		.loc 1 179 3 is_stmt 1 view .LVU162
 179:Core/Src/main.c **** 
 557              		.loc 1 179 6 is_stmt 0 view .LVU163
 558 026e 394B     		ldr	r3, .L55+8
 559 0270 D3ED157A 		vldr.32	s15, [r3, #84]
 179:Core/Src/main.c **** 
 560              		.loc 1 179 5 view .LVU164
 561 0274 F4EE677A 		vcmp.f32	s15, s15
 562 0278 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 563 027c 80F12381 		bvs	.L54
 564              	.L38:
 181:Core/Src/main.c **** 
 565              		.loc 1 181 3 is_stmt 1 view .LVU165
 566 0280 0022     		movs	r2, #0
 567 0282 4FF08043 		mov	r3, #1073741824
 568 0286 3B48     		ldr	r0, .L55+40
 569 0288 FFF7FEFF 		bl	printf
 570              	.LVL17:
 184:Core/Src/main.c **** 
 571              		.loc 1 184 3 view .LVU166
 189:Core/Src/main.c **** 
 572              		.loc 1 189 3 view .LVU167
 191:Core/Src/main.c **** 
 573              		.loc 1 191 3 view .LVU168
 574 028c 3A48     		ldr	r0, .L55+44
 575 028e FFF7FEFF 		bl	init_controller_params
 576              	.LVL18:
ARM GAS  /tmp/ccOvFgs4.s 			page 19


 194:Core/Src/main.c **** 
 577              		.loc 1 194 3 view .LVU169
 578 0292 4FF43872 		mov	r2, #736
 579 0296 0021     		movs	r1, #0
 580 0298 3848     		ldr	r0, .L55+48
 581 029a FFF7FEFF 		bl	memset
 582              	.LVL19:
 197:Core/Src/main.c ****   comm_encoder.e_zero = E_ZERO;
 583              		.loc 1 197 3 view .LVU170
 197:Core/Src/main.c ****   comm_encoder.e_zero = E_ZERO;
 584              		.loc 1 197 25 is_stmt 0 view .LVU171
 585 029e 2C49     		ldr	r1, .L55+4
 586 02a0 0B69     		ldr	r3, [r1, #16]
 197:Core/Src/main.c ****   comm_encoder.e_zero = E_ZERO;
 587              		.loc 1 197 23 view .LVU172
 588 02a2 374C     		ldr	r4, .L55+52
 589 02a4 C4F8D430 		str	r3, [r4, #212]
 198:Core/Src/main.c ****   comm_encoder.ppairs = PPAIRS;
 590              		.loc 1 198 3 is_stmt 1 view .LVU173
 198:Core/Src/main.c ****   comm_encoder.ppairs = PPAIRS;
 591              		.loc 1 198 25 is_stmt 0 view .LVU174
 592 02a8 4B69     		ldr	r3, [r1, #20]
 198:Core/Src/main.c ****   comm_encoder.ppairs = PPAIRS;
 593              		.loc 1 198 23 view .LVU175
 594 02aa C4F8D830 		str	r3, [r4, #216]
 199:Core/Src/main.c **** 
 595              		.loc 1 199 3 is_stmt 1 view .LVU176
 199:Core/Src/main.c **** 
 596              		.loc 1 199 25 is_stmt 0 view .LVU177
 597 02ae 294D     		ldr	r5, .L55+8
 598 02b0 AB6A     		ldr	r3, [r5, #40]	@ float
 199:Core/Src/main.c **** 
 599              		.loc 1 199 23 view .LVU178
 600 02b2 A366     		str	r3, [r4, #104]	@ float
 201:Core/Src/main.c ****   else{memset(&comm_encoder.offset_lut, 0, sizeof(comm_encoder.offset_lut));}
 601              		.loc 1 201 3 is_stmt 1 view .LVU179
 201:Core/Src/main.c ****   else{memset(&comm_encoder.offset_lut, 0, sizeof(comm_encoder.offset_lut));}
 602              		.loc 1 201 28 view .LVU180
 603 02b4 4FF40072 		mov	r2, #512
 604 02b8 1831     		adds	r1, r1, #24
 605 02ba 04F1DC00 		add	r0, r4, #220
 606 02be FFF7FEFF 		bl	memcpy
 607              	.LVL20:
 203:Core/Src/main.c **** 
 608              		.loc 1 203 3 view .LVU181
 609 02c2 6421     		movs	r1, #100
 610 02c4 2046     		mov	r0, r4
 611 02c6 FFF7FEFF 		bl	ps_warmup
 612              	.LVL21:
 208:Core/Src/main.c ****   HAL_ADC_Start(&hadc2);
 613              		.loc 1 208 3 view .LVU182
 614 02ca 2E48     		ldr	r0, .L55+56
 615 02cc FFF7FEFF 		bl	HAL_ADC_Start
 616              	.LVL22:
 209:Core/Src/main.c ****   HAL_ADC_Start(&hadc3);
 617              		.loc 1 209 3 view .LVU183
 618 02d0 2D48     		ldr	r0, .L55+60
ARM GAS  /tmp/ccOvFgs4.s 			page 20


 619 02d2 FFF7FEFF 		bl	HAL_ADC_Start
 620              	.LVL23:
 210:Core/Src/main.c **** 
 621              		.loc 1 210 3 view .LVU184
 622 02d6 2D48     		ldr	r0, .L55+64
 623 02d8 FFF7FEFF 		bl	HAL_ADC_Start
 624              	.LVL24:
 213:Core/Src/main.c ****   HAL_GPIO_WritePin(ENABLE_PIN, GPIO_PIN_SET );
 625              		.loc 1 213 3 view .LVU185
 626 02dc 2C4C     		ldr	r4, .L55+68
 627 02de 0122     		movs	r2, #1
 628 02e0 1021     		movs	r1, #16
 629 02e2 2046     		mov	r0, r4
 630 02e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 631              	.LVL25:
 214:Core/Src/main.c ****   HAL_Delay(1);
 632              		.loc 1 214 3 view .LVU186
 633 02e8 0122     		movs	r2, #1
 634 02ea 4FF40061 		mov	r1, #2048
 635 02ee 2046     		mov	r0, r4
 636 02f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 637              	.LVL26:
 215:Core/Src/main.c ****   //drv_calibrate(drv);
 638              		.loc 1 215 3 view .LVU187
 639 02f4 0120     		movs	r0, #1
 640 02f6 FFF7FEFF 		bl	HAL_Delay
 641              	.LVL27:
 217:Core/Src/main.c ****   drv_write_DCR(drv, 0x0, DIS_GDF_EN, 0x0, PWM_MODE_3X, 0x0, 0x0, 0x0, 0x0, 0x1);
 642              		.loc 1 217 3 view .LVU188
 643 02fa 0120     		movs	r0, #1
 644 02fc FFF7FEFF 		bl	HAL_Delay
 645              	.LVL28:
 218:Core/Src/main.c ****   HAL_Delay(1);
 646              		.loc 1 218 3 view .LVU189
 647 0300 2449     		ldr	r1, .L55+72
 648 0302 0124     		movs	r4, #1
 649 0304 0694     		str	r4, [sp, #24]
 650 0306 0022     		movs	r2, #0
 651 0308 0592     		str	r2, [sp, #20]
 652 030a 0492     		str	r2, [sp, #16]
 653 030c 0392     		str	r2, [sp, #12]
 654 030e 0292     		str	r2, [sp, #8]
 655 0310 0194     		str	r4, [sp, #4]
 656 0312 0092     		str	r2, [sp]
 657 0314 1346     		mov	r3, r2
 658 0316 0868     		ldr	r0, [r1]	@ unaligned
 659 0318 8988     		ldrh	r1, [r1, #4]
 660 031a FFF7FEFF 		bl	drv_write_DCR
 661              	.LVL29:
 219:Core/Src/main.c ****   int CSA_GAIN;
 662              		.loc 1 219 3 view .LVU190
 663 031e 2046     		mov	r0, r4
 664 0320 FFF7FEFF 		bl	HAL_Delay
 665              	.LVL30:
 220:Core/Src/main.c ****   if(I_MAX <= 40.0f){CSA_GAIN = CSA_GAIN_40;}	// Up to 40A use 40X amplifier gain
 666              		.loc 1 220 3 view .LVU191
 221:Core/Src/main.c ****   else{CSA_GAIN = CSA_GAIN_20;}					// From 40-60A use 20X amplifier gain.  (Make this generic in t
ARM GAS  /tmp/ccOvFgs4.s 			page 21


 667              		.loc 1 221 3 view .LVU192
 221:Core/Src/main.c ****   else{CSA_GAIN = CSA_GAIN_20;}					// From 40-60A use 20X amplifier gain.  (Make this generic in t
 668              		.loc 1 221 6 is_stmt 0 view .LVU193
 669 0324 95ED037A 		vldr.32	s14, [r5, #12]
 221:Core/Src/main.c ****   else{CSA_GAIN = CSA_GAIN_20;}					// From 40-60A use 20X amplifier gain.  (Make this generic in t
 670              		.loc 1 221 5 view .LVU194
 671 0328 DFED1B7A 		vldr.32	s15, .L55+76
 672 032c B4EEE77A 		vcmpe.f32	s14, s15
 673 0330 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 674 0334 00F2CA80 		bhi	.L44
 221:Core/Src/main.c ****   else{CSA_GAIN = CSA_GAIN_20;}					// From 40-60A use 20X amplifier gain.  (Make this generic in t
 675              		.loc 1 221 31 view .LVU195
 676 0338 0327     		movs	r7, #3
 677              	.L39:
 678              	.LVL31:
 223:Core/Src/main.c ****   HAL_Delay(1);
 679              		.loc 1 223 3 is_stmt 1 view .LVU196
 680 033a 164E     		ldr	r6, .L55+72
 681 033c 0025     		movs	r5, #0
 682 033e 0695     		str	r5, [sp, #24]
 683 0340 0124     		movs	r4, #1
 684 0342 0594     		str	r4, [sp, #20]
 685 0344 0494     		str	r4, [sp, #16]
 686 0346 0394     		str	r4, [sp, #12]
 687 0348 28E0     		b	.L56
 688              	.L57:
 689 034a 00BF     		.align	2
 690              	.L55:
 691 034c 00000000 		.word	prefs
 692 0350 00000000 		.word	__int_reg
 693 0354 00000000 		.word	__float_reg
 694 0358 00007A44 		.word	1148846080
 695 035c 00002042 		.word	1109393408
 696 0360 0000FA42 		.word	1123680256
 697 0364 00006041 		.word	1096810496
 698 0368 0000A040 		.word	1084227584
 699 036c 0000A841 		.word	1101529088
 700 0370 0000FA43 		.word	1140457472
 701 0374 00000000 		.word	.LC0
 702 0378 00000000 		.word	controller
 703 037c 2C820000 		.word	comm_encoder_cal+33324
 704 0380 00000000 		.word	comm_encoder
 705 0384 00000000 		.word	hadc1
 706 0388 00000000 		.word	hadc2
 707 038c 00000000 		.word	hadc3
 708 0390 00000240 		.word	1073872896
 709 0394 00000000 		.word	drv
 710 0398 00002042 		.word	1109393408
 711              	.L56:
 712 039c 0295     		str	r5, [sp, #8]
 713 039e 4FF00308 		mov	r8, #3
 714 03a2 CDF80480 		str	r8, [sp, #4]
 715 03a6 0095     		str	r5, [sp]
 716 03a8 2346     		mov	r3, r4
 717 03aa 2A46     		mov	r2, r5
 718 03ac 3068     		ldr	r0, [r6]	@ unaligned
 719 03ae B188     		ldrh	r1, [r6, #4]
ARM GAS  /tmp/ccOvFgs4.s 			page 22


 720 03b0 FFF7FEFF 		bl	drv_write_CSACR
 721              	.LVL32:
 224:Core/Src/main.c ****   drv_write_CSACR(drv, 0x0, 0x1, 0x0, CSA_GAIN, 0x1, 0x0, 0x0, 0x0, SEN_LVL_0_25);
 722              		.loc 1 224 3 view .LVU197
 723 03b4 2046     		mov	r0, r4
 724 03b6 FFF7FEFF 		bl	HAL_Delay
 725              	.LVL33:
 225:Core/Src/main.c ****   HAL_Delay(1);
 726              		.loc 1 225 3 view .LVU198
 727 03ba 0695     		str	r5, [sp, #24]
 728 03bc 0595     		str	r5, [sp, #20]
 729 03be 0495     		str	r5, [sp, #16]
 730 03c0 0395     		str	r5, [sp, #12]
 731 03c2 0294     		str	r4, [sp, #8]
 732 03c4 0197     		str	r7, [sp, #4]
 733 03c6 0095     		str	r5, [sp]
 734 03c8 2346     		mov	r3, r4
 735 03ca 2A46     		mov	r2, r5
 736 03cc 3068     		ldr	r0, [r6]	@ unaligned
 737 03ce B188     		ldrh	r1, [r6, #4]
 738 03d0 FFF7FEFF 		bl	drv_write_CSACR
 739              	.LVL34:
 226:Core/Src/main.c ****   zero_current(&controller);
 740              		.loc 1 226 3 view .LVU199
 741 03d4 2046     		mov	r0, r4
 742 03d6 FFF7FEFF 		bl	HAL_Delay
 743              	.LVL35:
 227:Core/Src/main.c ****   HAL_Delay(1);
 744              		.loc 1 227 3 view .LVU200
 745 03da 3D4F     		ldr	r7, .L58
 746              	.LVL36:
 227:Core/Src/main.c ****   HAL_Delay(1);
 747              		.loc 1 227 3 is_stmt 0 view .LVU201
 748 03dc 3846     		mov	r0, r7
 749 03de FFF7FEFF 		bl	zero_current
 750              	.LVL37:
 228:Core/Src/main.c ****   drv_write_OCPCR(drv, TRETRY_50US, DEADTIME_50NS, OCP_RETRY, OCP_DEG_8US, VDS_LVL_0_45);
 751              		.loc 1 228 3 is_stmt 1 view .LVU202
 752 03e2 2046     		mov	r0, r4
 753 03e4 FFF7FEFF 		bl	HAL_Delay
 754              	.LVL38:
 229:Core/Src/main.c ****   HAL_Delay(1);
 755              		.loc 1 229 3 view .LVU203
 756 03e8 0523     		movs	r3, #5
 757 03ea 0293     		str	r3, [sp, #8]
 758 03ec CDF80480 		str	r8, [sp, #4]
 759 03f0 0094     		str	r4, [sp]
 760 03f2 2B46     		mov	r3, r5
 761 03f4 2246     		mov	r2, r4
 762 03f6 3068     		ldr	r0, [r6]	@ unaligned
 763 03f8 B188     		ldrh	r1, [r6, #4]
 764 03fa FFF7FEFF 		bl	drv_write_OCPCR
 765              	.LVL39:
 230:Core/Src/main.c ****   drv_disable_gd(drv);
 766              		.loc 1 230 3 view .LVU204
 767 03fe 2046     		mov	r0, r4
 768 0400 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccOvFgs4.s 			page 23


 769              	.LVL40:
 231:Core/Src/main.c ****   HAL_Delay(1);
 770              		.loc 1 231 3 view .LVU205
 771 0404 3068     		ldr	r0, [r6]	@ unaligned
 772 0406 B188     		ldrh	r1, [r6, #4]
 773 0408 FFF7FEFF 		bl	drv_disable_gd
 774              	.LVL41:
 232:Core/Src/main.c ****   //drv_enable_gd(drv);   */
 775              		.loc 1 232 3 view .LVU206
 776 040c 2046     		mov	r0, r4
 777 040e FFF7FEFF 		bl	HAL_Delay
 778              	.LVL42:
 234:Core/Src/main.c **** 
 779              		.loc 1 234 3 view .LVU207
 780 0412 D7F8A020 		ldr	r2, [r7, #160]
 781 0416 D7F89C10 		ldr	r1, [r7, #156]
 782 041a 2E48     		ldr	r0, .L58+4
 783 041c FFF7FEFF 		bl	printf
 784              	.LVL43:
 237:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 785              		.loc 1 237 3 view .LVU208
 786 0420 2D4E     		ldr	r6, .L58+8
 787 0422 2946     		mov	r1, r5
 788 0424 3046     		mov	r0, r6
 789 0426 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 790              	.LVL44:
 238:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 791              		.loc 1 238 3 view .LVU209
 792 042a 0421     		movs	r1, #4
 793 042c 3046     		mov	r0, r6
 794 042e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 795              	.LVL45:
 239:Core/Src/main.c **** 
 796              		.loc 1 239 3 view .LVU210
 797 0432 0821     		movs	r1, #8
 798 0434 3046     		mov	r0, r6
 799 0436 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 800              	.LVL46:
 242:Core/Src/main.c ****   can_tx_init(&can_tx);
 801              		.loc 1 242 3 view .LVU211
 802 043a 2848     		ldr	r0, .L58+12
 803 043c FFF7FEFF 		bl	can_rx_init
 804              	.LVL47:
 243:Core/Src/main.c ****   HAL_CAN_Start(&CAN_H); //start CAN
 805              		.loc 1 243 3 view .LVU212
 806 0440 2748     		ldr	r0, .L58+16
 807 0442 FFF7FEFF 		bl	can_tx_init
 808              	.LVL48:
 244:Core/Src/main.c ****   //__HAL_CAN_ENABLE_IT(&CAN_H, CAN_IT_RX_FIFO0_MSG_PENDING); // Start can interrupt
 809              		.loc 1 244 3 view .LVU213
 810 0446 2748     		ldr	r0, .L58+20
 811 0448 FFF7FEFF 		bl	HAL_CAN_Start
 812              	.LVL49:
 248:Core/Src/main.c ****   HAL_NVIC_SetPriority(CAN_ISR, 0x01, 0x01);
 813              		.loc 1 248 3 view .LVU214
 814 044c 2A46     		mov	r2, r5
 815 044e 2946     		mov	r1, r5
ARM GAS  /tmp/ccOvFgs4.s 			page 24


 816 0450 1920     		movs	r0, #25
 817 0452 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 818              	.LVL50:
 249:Core/Src/main.c **** 
 819              		.loc 1 249 3 view .LVU215
 820 0456 2246     		mov	r2, r4
 821 0458 2146     		mov	r1, r4
 822 045a 1420     		movs	r0, #20
 823 045c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 824              	.LVL51:
 252:Core/Src/main.c ****   state.next_state = MENU_MODE;
 825              		.loc 1 252 3 view .LVU216
 252:Core/Src/main.c ****   state.next_state = MENU_MODE;
 826              		.loc 1 252 15 is_stmt 0 view .LVU217
 827 0460 214B     		ldr	r3, .L58+24
 828 0462 1D70     		strb	r5, [r3]
 253:Core/Src/main.c ****   state.ready = 1;
 829              		.loc 1 253 3 is_stmt 1 view .LVU218
 253:Core/Src/main.c ****   state.ready = 1;
 830              		.loc 1 253 20 is_stmt 0 view .LVU219
 831 0464 5D70     		strb	r5, [r3, #1]
 254:Core/Src/main.c **** 
 832              		.loc 1 254 3 is_stmt 1 view .LVU220
 254:Core/Src/main.c **** 
 833              		.loc 1 254 15 is_stmt 0 view .LVU221
 834 0466 DC70     		strb	r4, [r3, #3]
 258:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 835              		.loc 1 258 3 is_stmt 1 view .LVU222
 836 0468 2246     		mov	r2, r4
 837 046a 2049     		ldr	r1, .L58+28
 838 046c 2048     		ldr	r0, .L58+32
 839 046e FFF7FEFF 		bl	HAL_UART_Receive_IT
 840              	.LVL52:
 259:Core/Src/main.c **** 
 841              		.loc 1 259 3 view .LVU223
 842 0472 3046     		mov	r0, r6
 843 0474 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 844              	.LVL53:
 845              	.L41:
 265:Core/Src/main.c ****   {
 846              		.loc 1 265 3 discriminator 1 view .LVU224
 268:Core/Src/main.c **** 	  drv_print_faults(drv);
 847              		.loc 1 268 4 discriminator 1 view .LVU225
 848 0478 6420     		movs	r0, #100
 849 047a FFF7FEFF 		bl	HAL_Delay
 850              	.LVL54:
 269:Core/Src/main.c **** 	 // if(state.state==MOTOR_MODE){
 851              		.loc 1 269 4 discriminator 1 view .LVU226
 852 047e 1D4B     		ldr	r3, .L58+36
 853 0480 1868     		ldr	r0, [r3]	@ unaligned
 854 0482 9988     		ldrh	r1, [r3, #4]
 855 0484 FFF7FEFF 		bl	drv_print_faults
 856              	.LVL55:
 265:Core/Src/main.c ****   {
 857              		.loc 1 265 9 discriminator 1 view .LVU227
 858 0488 F6E7     		b	.L41
 859              	.L46:
ARM GAS  /tmp/ccOvFgs4.s 			page 25


 159:Core/Src/main.c ****   if(M_ZERO==-1){M_ZERO = 0;}
 860              		.loc 1 159 18 discriminator 1 view .LVU228
 159:Core/Src/main.c ****   if(M_ZERO==-1){M_ZERO = 0;}
 861              		.loc 1 159 25 is_stmt 0 discriminator 1 view .LVU229
 862 048a 1B4B     		ldr	r3, .L58+40
 863 048c 0022     		movs	r2, #0
 864 048e 5A61     		str	r2, [r3, #20]
 865 0490 E0E5     		b	.L6
 866              	.L47:
 160:Core/Src/main.c ****   if(isnan(I_BW) || I_BW==-1){I_BW = 1000;}
 867              		.loc 1 160 18 is_stmt 1 discriminator 1 view .LVU230
 160:Core/Src/main.c ****   if(isnan(I_BW) || I_BW==-1){I_BW = 1000;}
 868              		.loc 1 160 25 is_stmt 0 discriminator 1 view .LVU231
 869 0492 194B     		ldr	r3, .L58+40
 870 0494 0022     		movs	r2, #0
 871 0496 1A61     		str	r2, [r3, #16]
 872 0498 E2E5     		b	.L7
 873              	.L48:
 164:Core/Src/main.c ****   if(CAN_MASTER==-1){CAN_MASTER = 0;}
 874              		.loc 1 164 18 is_stmt 1 discriminator 1 view .LVU232
 164:Core/Src/main.c ****   if(CAN_MASTER==-1){CAN_MASTER = 0;}
 875              		.loc 1 164 25 is_stmt 0 discriminator 1 view .LVU233
 876 049a 174B     		ldr	r3, .L58+40
 877 049c 0122     		movs	r2, #1
 878 049e 5A60     		str	r2, [r3, #4]
 879 04a0 1AE6     		b	.L14
 880              	.L49:
 165:Core/Src/main.c ****   if(CAN_TIMEOUT==-1){CAN_TIMEOUT = 1000;}
 881              		.loc 1 165 22 is_stmt 1 discriminator 1 view .LVU234
 165:Core/Src/main.c ****   if(CAN_TIMEOUT==-1){CAN_TIMEOUT = 1000;}
 882              		.loc 1 165 33 is_stmt 0 discriminator 1 view .LVU235
 883 04a2 154B     		ldr	r3, .L58+40
 884 04a4 0022     		movs	r2, #0
 885 04a6 9A60     		str	r2, [r3, #8]
 886 04a8 1CE6     		b	.L15
 887              	.L50:
 166:Core/Src/main.c ****   if(isnan(R_NOMINAL) || R_NOMINAL==-1){R_NOMINAL = 0.0f;}
 888              		.loc 1 166 23 is_stmt 1 discriminator 1 view .LVU236
 166:Core/Src/main.c ****   if(isnan(R_NOMINAL) || R_NOMINAL==-1){R_NOMINAL = 0.0f;}
 889              		.loc 1 166 35 is_stmt 0 discriminator 1 view .LVU237
 890 04aa 134B     		ldr	r3, .L58+40
 891 04ac 4FF47A72 		mov	r2, #1000
 892 04b0 DA60     		str	r2, [r3, #12]
 893 04b2 1DE6     		b	.L16
 894              	.L51:
 176:Core/Src/main.c ****   if(isnan(P_MIN)){P_MIN = -12.5f;}
 895              		.loc 1 176 20 is_stmt 1 discriminator 1 view .LVU238
 176:Core/Src/main.c ****   if(isnan(P_MIN)){P_MIN = -12.5f;}
 896              		.loc 1 176 26 is_stmt 0 discriminator 1 view .LVU239
 897 04b4 114A     		ldr	r2, .L58+44
 898 04b6 1A65     		str	r2, [r3, #80]	@ float
 899 04b8 C7E6     		b	.L35
 900              	.L52:
 177:Core/Src/main.c ****   if(isnan(V_MAX)){V_MAX = 65.0f;}
 901              		.loc 1 177 20 is_stmt 1 discriminator 1 view .LVU240
 177:Core/Src/main.c ****   if(isnan(V_MAX)){V_MAX = 65.0f;}
 902              		.loc 1 177 26 is_stmt 0 discriminator 1 view .LVU241
ARM GAS  /tmp/ccOvFgs4.s 			page 26


 903 04ba 114A     		ldr	r2, .L58+48
 904 04bc DA64     		str	r2, [r3, #76]	@ float
 905 04be CDE6     		b	.L36
 906              	.L53:
 178:Core/Src/main.c ****   if(isnan(V_MIN)){V_MIN = -65.0f;}
 907              		.loc 1 178 20 is_stmt 1 discriminator 1 view .LVU242
 178:Core/Src/main.c ****   if(isnan(V_MIN)){V_MIN = -65.0f;}
 908              		.loc 1 178 26 is_stmt 0 discriminator 1 view .LVU243
 909 04c0 104A     		ldr	r2, .L58+52
 910 04c2 9A65     		str	r2, [r3, #88]	@ float
 911 04c4 D3E6     		b	.L37
 912              	.L54:
 179:Core/Src/main.c **** 
 913              		.loc 1 179 20 is_stmt 1 discriminator 1 view .LVU244
 179:Core/Src/main.c **** 
 914              		.loc 1 179 26 is_stmt 0 discriminator 1 view .LVU245
 915 04c6 104A     		ldr	r2, .L58+56
 916 04c8 5A65     		str	r2, [r3, #84]	@ float
 917 04ca D9E6     		b	.L38
 918              	.L44:
 222:Core/Src/main.c ****   drv_write_CSACR(drv, 0x0, 0x1, 0x0, CSA_GAIN_40, 0x0, 0x1, 0x1, 0x1, SEN_LVL_0_25);
 919              		.loc 1 222 17 view .LVU246
 920 04cc 0227     		movs	r7, #2
 921 04ce 34E7     		b	.L39
 922              	.L59:
 923              		.align	2
 924              	.L58:
 925 04d0 00000000 		.word	controller
 926 04d4 24000000 		.word	.LC1
 927 04d8 00000000 		.word	htim1
 928 04dc 00000000 		.word	can_rx
 929 04e0 00000000 		.word	can_tx
 930 04e4 00000000 		.word	hcan1
 931 04e8 00000000 		.word	state
 932 04ec 00000000 		.word	Serial2RxBuffer
 933 04f0 00000000 		.word	huart2
 934 04f4 00000000 		.word	drv
 935 04f8 00000000 		.word	__int_reg
 936 04fc 00004841 		.word	1095237632
 937 0500 000048C1 		.word	-1052246016
 938 0504 00008242 		.word	1115815936
 939 0508 000082C2 		.word	-1031667712
 940              		.cfi_endproc
 941              	.LFE238:
 943              		.section	.text.Error_Handler,"ax",%progbits
 944              		.align	1
 945              		.global	Error_Handler
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	Error_Handler:
 952              	.LFB240:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/ccOvFgs4.s 			page 27


 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** /**
 335:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 336:Core/Src/main.c ****   * @retval None
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c **** void Error_Handler(void)
 339:Core/Src/main.c **** {
 953              		.loc 1 339 1 is_stmt 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 340:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 341:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 344:Core/Src/main.c **** }
 958              		.loc 1 344 1 view .LVU248
 959 0000 7047     		bx	lr
 960              		.cfi_endproc
 961              	.LFE240:
 963              		.comm	Serial2RxBuffer,1,4
 964              		.global	lut_array
 965              		.global	error_array
 966              		.comm	can_rx,80,4
 967              		.comm	can_tx,32,4
 968              		.comm	comm_encoder_cal,34060,4
 969              		.comm	drv,6,4
 970              		.comm	comm_encoder,736,4
 971              		.comm	state,14,4
 972              		.comm	com,0,4
 973              		.comm	observer,40,8
 974              		.comm	controller,776,4
 975              		.global	count
 976              		.comm	prefs,20,4
 977              		.comm	__int_reg,1024,4
 978              		.comm	__float_reg,256,4
 979              		.section	.bss.count,"aw",%nobits
 980              		.align	2
 983              	count:
 984 0000 00000000 		.space	4
 985              		.section	.bss.error_array,"aw",%nobits
 986              		.align	2
 989              	error_array:
 990 0000 00000000 		.space	4
 991              		.section	.bss.lut_array,"aw",%nobits
 992              		.align	2
 995              	lut_array:
 996 0000 00000000 		.space	4
 997              		.text
 998              	.Letext0:
 999              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1000              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1001              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1002              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1003              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1004              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/ccOvFgs4.s 			page 28


 1005              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1006              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1007              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1008              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1009              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1010              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1011              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1012              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1013              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1014              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1015              		.file 18 "Core/Inc/adc.h"
 1016              		.file 19 "Core/Inc/can.h"
 1017              		.file 20 "Core/Inc/spi.h"
 1018              		.file 21 "Core/Inc/tim.h"
 1019              		.file 22 "Core/Inc/usart.h"
 1020              		.file 23 "Core/Inc/position_sensor.h"
 1021              		.file 24 "Core/Inc/flash_writer.h"
 1022              		.file 25 "Core/Inc/preference_writer.h"
 1023              		.file 26 "Core/Inc/fsm.h"
 1024              		.file 27 "Core/Inc/drv8323.h"
 1025              		.file 28 "Core/Inc/foc.h"
 1026              		.file 29 "Core/Inc/calibration.h"
 1027              		.file 30 "Core/Inc/structs.h"
 1028              		.file 31 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1029              		.file 32 "/usr/include/newlib/sys/_types.h"
 1030              		.file 33 "/usr/include/newlib/sys/reent.h"
 1031              		.file 34 "/usr/include/newlib/sys/lock.h"
 1032              		.file 35 "Core/Inc/user_config.h"
 1033              		.file 36 "/usr/include/newlib/math.h"
 1034              		.file 37 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 1035              		.file 38 "Core/Inc/gpio.h"
 1036              		.file 39 "/usr/include/newlib/stdio.h"
 1037              		.file 40 "<built-in>"
 1038              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccOvFgs4.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOvFgs4.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccOvFgs4.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccOvFgs4.s:166    .text.SystemClock_Config:0000000000000094 $d
     /tmp/ccOvFgs4.s:172    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccOvFgs4.s:179    .text.main:0000000000000000 $t
     /tmp/ccOvFgs4.s:186    .text.main:0000000000000000 main
     /tmp/ccOvFgs4.s:691    .text.main:000000000000034c $d
                            *COM*:0000000000000014 prefs
                            *COM*:0000000000000400 __int_reg
                            *COM*:0000000000000100 __float_reg
                            *COM*:0000000000000308 controller
                            *COM*:000000000000850c comm_encoder_cal
                            *COM*:00000000000002e0 comm_encoder
                            *COM*:0000000000000006 drv
     /tmp/ccOvFgs4.s:712    .text.main:000000000000039c $t
     /tmp/ccOvFgs4.s:925    .text.main:00000000000004d0 $d
                            *COM*:0000000000000050 can_rx
                            *COM*:0000000000000020 can_tx
                            *COM*:000000000000000e state
                            *COM*:0000000000000001 Serial2RxBuffer
     /tmp/ccOvFgs4.s:944    .text.Error_Handler:0000000000000000 $t
     /tmp/ccOvFgs4.s:951    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccOvFgs4.s:995    .bss.lut_array:0000000000000000 lut_array
     /tmp/ccOvFgs4.s:989    .bss.error_array:0000000000000000 error_array
                            *COM*:0000000000000000 com
                            *COM*:0000000000000028 observer
     /tmp/ccOvFgs4.s:983    .bss.count:0000000000000000 count
     /tmp/ccOvFgs4.s:980    .bss.count:0000000000000000 $d
     /tmp/ccOvFgs4.s:986    .bss.error_array:0000000000000000 $d
     /tmp/ccOvFgs4.s:992    .bss.lut_array:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_CAN1_Init
MX_SPI1_Init
MX_SPI3_Init
MX_ADC1_Init
MX_ADC2_Init
MX_ADC3_Init
preference_writer_init
preference_writer_load
printf
init_controller_params
memcpy
ps_warmup
HAL_ADC_Start
HAL_GPIO_WritePin
HAL_Delay
ARM GAS  /tmp/ccOvFgs4.s 			page 30


drv_write_DCR
hadc1
hadc2
hadc3
drv_write_CSACR
zero_current
drv_write_OCPCR
drv_disable_gd
HAL_TIM_PWM_Start
can_rx_init
can_tx_init
HAL_CAN_Start
HAL_NVIC_SetPriority
HAL_UART_Receive_IT
HAL_TIM_Base_Start_IT
drv_print_faults
htim1
hcan1
huart2
