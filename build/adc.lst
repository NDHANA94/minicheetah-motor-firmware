ARM GAS  /tmp/ccZiY1KG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB235:
  28              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * @file    adc.c
   4:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/adc.c ****   *          of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/adc.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/adc.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** ADC_HandleTypeDef hadc2;
  29:Core/Src/adc.c **** ADC_HandleTypeDef hadc3;
  30:Core/Src/adc.c **** 
ARM GAS  /tmp/ccZiY1KG.s 			page 2


  31:Core/Src/adc.c **** /* ADC1 init function */
  32:Core/Src/adc.c **** void MX_ADC1_Init(void)
  33:Core/Src/adc.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  34:Core/Src/adc.c **** 
  35:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  36:Core/Src/adc.c **** 
  37:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  38:Core/Src/adc.c **** 
  39:Core/Src/adc.c ****   ADC_MultiModeTypeDef multimode = {0};
  40              		.loc 1 39 3 view .LVU1
  41              		.loc 1 39 24 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0593     		str	r3, [sp, #20]
  44 0008 0693     		str	r3, [sp, #24]
  45 000a 0793     		str	r3, [sp, #28]
  40:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  46              		.loc 1 40 3 is_stmt 1 view .LVU3
  47              		.loc 1 40 26 is_stmt 0 view .LVU4
  48 000c 0193     		str	r3, [sp, #4]
  49 000e 0293     		str	r3, [sp, #8]
  50 0010 0393     		str	r3, [sp, #12]
  51 0012 0493     		str	r3, [sp, #16]
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  45:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  46:Core/Src/adc.c ****   */
  47:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  52              		.loc 1 47 3 is_stmt 1 view .LVU5
  53              		.loc 1 47 18 is_stmt 0 view .LVU6
  54 0014 1B48     		ldr	r0, .L9
  55 0016 1C4A     		ldr	r2, .L9+4
  56 0018 0260     		str	r2, [r0]
  48:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  57              		.loc 1 48 3 is_stmt 1 view .LVU7
  58              		.loc 1 48 29 is_stmt 0 view .LVU8
  59 001a 4FF48032 		mov	r2, #65536
  60 001e 4260     		str	r2, [r0, #4]
  49:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  61              		.loc 1 49 3 is_stmt 1 view .LVU9
  62              		.loc 1 49 25 is_stmt 0 view .LVU10
  63 0020 8360     		str	r3, [r0, #8]
  50:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = DISABLE;
  64              		.loc 1 50 3 is_stmt 1 view .LVU11
  65              		.loc 1 50 27 is_stmt 0 view .LVU12
ARM GAS  /tmp/ccZiY1KG.s 			page 3


  66 0022 0361     		str	r3, [r0, #16]
  51:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  67              		.loc 1 51 3 is_stmt 1 view .LVU13
  68              		.loc 1 51 33 is_stmt 0 view .LVU14
  69 0024 0376     		strb	r3, [r0, #24]
  52:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  70              		.loc 1 52 3 is_stmt 1 view .LVU15
  71              		.loc 1 52 36 is_stmt 0 view .LVU16
  72 0026 80F82030 		strb	r3, [r0, #32]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  73              		.loc 1 53 3 is_stmt 1 view .LVU17
  74              		.loc 1 53 35 is_stmt 0 view .LVU18
  75 002a C362     		str	r3, [r0, #44]
  54:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  76              		.loc 1 54 3 is_stmt 1 view .LVU19
  77              		.loc 1 54 31 is_stmt 0 view .LVU20
  78 002c 174A     		ldr	r2, .L9+8
  79 002e 8262     		str	r2, [r0, #40]
  55:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  80              		.loc 1 55 3 is_stmt 1 view .LVU21
  81              		.loc 1 55 24 is_stmt 0 view .LVU22
  82 0030 C360     		str	r3, [r0, #12]
  56:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 1;
  83              		.loc 1 56 3 is_stmt 1 view .LVU23
  84              		.loc 1 56 30 is_stmt 0 view .LVU24
  85 0032 0122     		movs	r2, #1
  86 0034 C261     		str	r2, [r0, #28]
  57:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  87              		.loc 1 57 3 is_stmt 1 view .LVU25
  88              		.loc 1 57 36 is_stmt 0 view .LVU26
  89 0036 80F83030 		strb	r3, [r0, #48]
  58:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  90              		.loc 1 58 3 is_stmt 1 view .LVU27
  91              		.loc 1 58 27 is_stmt 0 view .LVU28
  92 003a 4261     		str	r2, [r0, #20]
  59:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  93              		.loc 1 59 3 is_stmt 1 view .LVU29
  94              		.loc 1 59 7 is_stmt 0 view .LVU30
  95 003c FFF7FEFF 		bl	HAL_ADC_Init
  96              	.LVL0:
  97              		.loc 1 59 6 view .LVU31
  98 0040 B8B9     		cbnz	r0, .L6
  99              	.L2:
  60:Core/Src/adc.c ****   {
  61:Core/Src/adc.c ****     Error_Handler();
  62:Core/Src/adc.c ****   }
  63:Core/Src/adc.c ****   /** Configure the ADC multi-mode
  64:Core/Src/adc.c ****   */
  65:Core/Src/adc.c ****   multimode.Mode = ADC_TRIPLEMODE_REGSIMULT;
 100              		.loc 1 65 3 is_stmt 1 view .LVU32
 101              		.loc 1 65 18 is_stmt 0 view .LVU33
 102 0042 1623     		movs	r3, #22
 103 0044 0593     		str	r3, [sp, #20]
  66:Core/Src/adc.c ****   multimode.DMAAccessMode = ADC_DMAACCESSMODE_DISABLED;
 104              		.loc 1 66 3 is_stmt 1 view .LVU34
 105              		.loc 1 66 27 is_stmt 0 view .LVU35
 106 0046 0023     		movs	r3, #0
ARM GAS  /tmp/ccZiY1KG.s 			page 4


 107 0048 0693     		str	r3, [sp, #24]
  67:Core/Src/adc.c ****   multimode.TwoSamplingDelay = ADC_TWOSAMPLINGDELAY_5CYCLES;
 108              		.loc 1 67 3 is_stmt 1 view .LVU36
 109              		.loc 1 67 30 is_stmt 0 view .LVU37
 110 004a 0793     		str	r3, [sp, #28]
  68:Core/Src/adc.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 111              		.loc 1 68 3 is_stmt 1 view .LVU38
 112              		.loc 1 68 7 is_stmt 0 view .LVU39
 113 004c 05A9     		add	r1, sp, #20
 114 004e 0D48     		ldr	r0, .L9
 115 0050 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 116              	.LVL1:
 117              		.loc 1 68 6 view .LVU40
 118 0054 80B9     		cbnz	r0, .L7
 119              	.L3:
  69:Core/Src/adc.c ****   {
  70:Core/Src/adc.c ****     Error_Handler();
  71:Core/Src/adc.c ****   }
  72:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  73:Core/Src/adc.c ****   */
  74:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_10;
 120              		.loc 1 74 3 is_stmt 1 view .LVU41
 121              		.loc 1 74 19 is_stmt 0 view .LVU42
 122 0056 0A23     		movs	r3, #10
 123 0058 0193     		str	r3, [sp, #4]
  75:Core/Src/adc.c ****   sConfig.Rank = 1;
 124              		.loc 1 75 3 is_stmt 1 view .LVU43
 125              		.loc 1 75 16 is_stmt 0 view .LVU44
 126 005a 0123     		movs	r3, #1
 127 005c 0293     		str	r3, [sp, #8]
  76:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 128              		.loc 1 76 3 is_stmt 1 view .LVU45
 129              		.loc 1 76 24 is_stmt 0 view .LVU46
 130 005e 0023     		movs	r3, #0
 131 0060 0393     		str	r3, [sp, #12]
  77:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 132              		.loc 1 77 3 is_stmt 1 view .LVU47
 133              		.loc 1 77 7 is_stmt 0 view .LVU48
 134 0062 01A9     		add	r1, sp, #4
 135 0064 0748     		ldr	r0, .L9
 136 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 137              	.LVL2:
 138              		.loc 1 77 6 view .LVU49
 139 006a 40B9     		cbnz	r0, .L8
 140              	.L1:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     Error_Handler();
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
  82:Core/Src/adc.c **** 
  83:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
  84:Core/Src/adc.c **** 
  85:Core/Src/adc.c **** }
 141              		.loc 1 85 1 view .LVU50
 142 006c 09B0     		add	sp, sp, #36
 143              	.LCFI2:
 144              		.cfi_remember_state
ARM GAS  /tmp/ccZiY1KG.s 			page 5


 145              		.cfi_def_cfa_offset 4
 146              		@ sp needed
 147 006e 5DF804FB 		ldr	pc, [sp], #4
 148              	.L6:
 149              	.LCFI3:
 150              		.cfi_restore_state
  61:Core/Src/adc.c ****   }
 151              		.loc 1 61 5 is_stmt 1 view .LVU51
 152 0072 FFF7FEFF 		bl	Error_Handler
 153              	.LVL3:
 154 0076 E4E7     		b	.L2
 155              	.L7:
  70:Core/Src/adc.c ****   }
 156              		.loc 1 70 5 view .LVU52
 157 0078 FFF7FEFF 		bl	Error_Handler
 158              	.LVL4:
 159 007c EBE7     		b	.L3
 160              	.L8:
  79:Core/Src/adc.c ****   }
 161              		.loc 1 79 5 view .LVU53
 162 007e FFF7FEFF 		bl	Error_Handler
 163              	.LVL5:
 164              		.loc 1 85 1 is_stmt 0 view .LVU54
 165 0082 F3E7     		b	.L1
 166              	.L10:
 167              		.align	2
 168              	.L9:
 169 0084 00000000 		.word	hadc1
 170 0088 00200140 		.word	1073815552
 171 008c 0100000F 		.word	251658241
 172              		.cfi_endproc
 173              	.LFE235:
 175              		.section	.text.MX_ADC2_Init,"ax",%progbits
 176              		.align	1
 177              		.global	MX_ADC2_Init
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	MX_ADC2_Init:
 184              	.LFB236:
  86:Core/Src/adc.c **** /* ADC2 init function */
  87:Core/Src/adc.c **** void MX_ADC2_Init(void)
  88:Core/Src/adc.c **** {
 185              		.loc 1 88 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 16
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 00B5     		push	{lr}
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 14, -4
 193 0002 85B0     		sub	sp, sp, #20
 194              	.LCFI5:
 195              		.cfi_def_cfa_offset 24
  89:Core/Src/adc.c **** 
  90:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 0 */
ARM GAS  /tmp/ccZiY1KG.s 			page 6


  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 0 */
  93:Core/Src/adc.c **** 
  94:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 196              		.loc 1 94 3 view .LVU56
 197              		.loc 1 94 26 is_stmt 0 view .LVU57
 198 0004 0023     		movs	r3, #0
 199 0006 0093     		str	r3, [sp]
 200 0008 0193     		str	r3, [sp, #4]
 201 000a 0293     		str	r3, [sp, #8]
 202 000c 0393     		str	r3, [sp, #12]
  95:Core/Src/adc.c **** 
  96:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 1 */
  97:Core/Src/adc.c **** 
  98:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 1 */
  99:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 100:Core/Src/adc.c ****   */
 101:Core/Src/adc.c ****   hadc2.Instance = ADC2;
 203              		.loc 1 101 3 is_stmt 1 view .LVU58
 204              		.loc 1 101 18 is_stmt 0 view .LVU59
 205 000e 1448     		ldr	r0, .L17
 206 0010 144A     		ldr	r2, .L17+4
 207 0012 0260     		str	r2, [r0]
 102:Core/Src/adc.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 208              		.loc 1 102 3 is_stmt 1 view .LVU60
 209              		.loc 1 102 29 is_stmt 0 view .LVU61
 210 0014 4FF48032 		mov	r2, #65536
 211 0018 4260     		str	r2, [r0, #4]
 103:Core/Src/adc.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 212              		.loc 1 103 3 is_stmt 1 view .LVU62
 213              		.loc 1 103 25 is_stmt 0 view .LVU63
 214 001a 8360     		str	r3, [r0, #8]
 104:Core/Src/adc.c ****   hadc2.Init.ScanConvMode = DISABLE;
 215              		.loc 1 104 3 is_stmt 1 view .LVU64
 216              		.loc 1 104 27 is_stmt 0 view .LVU65
 217 001c 0361     		str	r3, [r0, #16]
 105:Core/Src/adc.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 218              		.loc 1 105 3 is_stmt 1 view .LVU66
 219              		.loc 1 105 33 is_stmt 0 view .LVU67
 220 001e 0376     		strb	r3, [r0, #24]
 106:Core/Src/adc.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 221              		.loc 1 106 3 is_stmt 1 view .LVU68
 222              		.loc 1 106 36 is_stmt 0 view .LVU69
 223 0020 80F82030 		strb	r3, [r0, #32]
 107:Core/Src/adc.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 224              		.loc 1 107 3 is_stmt 1 view .LVU70
 225              		.loc 1 107 24 is_stmt 0 view .LVU71
 226 0024 C360     		str	r3, [r0, #12]
 108:Core/Src/adc.c ****   hadc2.Init.NbrOfConversion = 1;
 227              		.loc 1 108 3 is_stmt 1 view .LVU72
 228              		.loc 1 108 30 is_stmt 0 view .LVU73
 229 0026 0122     		movs	r2, #1
 230 0028 C261     		str	r2, [r0, #28]
 109:Core/Src/adc.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 231              		.loc 1 109 3 is_stmt 1 view .LVU74
 232              		.loc 1 109 36 is_stmt 0 view .LVU75
 233 002a 80F83030 		strb	r3, [r0, #48]
ARM GAS  /tmp/ccZiY1KG.s 			page 7


 110:Core/Src/adc.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 234              		.loc 1 110 3 is_stmt 1 view .LVU76
 235              		.loc 1 110 27 is_stmt 0 view .LVU77
 236 002e 4261     		str	r2, [r0, #20]
 111:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 237              		.loc 1 111 3 is_stmt 1 view .LVU78
 238              		.loc 1 111 7 is_stmt 0 view .LVU79
 239 0030 FFF7FEFF 		bl	HAL_ADC_Init
 240              	.LVL6:
 241              		.loc 1 111 6 view .LVU80
 242 0034 68B9     		cbnz	r0, .L15
 243              	.L12:
 112:Core/Src/adc.c ****   {
 113:Core/Src/adc.c ****     Error_Handler();
 114:Core/Src/adc.c ****   }
 115:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 116:Core/Src/adc.c ****   */
 117:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_11;
 244              		.loc 1 117 3 is_stmt 1 view .LVU81
 245              		.loc 1 117 19 is_stmt 0 view .LVU82
 246 0036 0B23     		movs	r3, #11
 247 0038 0093     		str	r3, [sp]
 118:Core/Src/adc.c ****   sConfig.Rank = 1;
 248              		.loc 1 118 3 is_stmt 1 view .LVU83
 249              		.loc 1 118 16 is_stmt 0 view .LVU84
 250 003a 0123     		movs	r3, #1
 251 003c 0193     		str	r3, [sp, #4]
 119:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 252              		.loc 1 119 3 is_stmt 1 view .LVU85
 253              		.loc 1 119 24 is_stmt 0 view .LVU86
 254 003e 0023     		movs	r3, #0
 255 0040 0293     		str	r3, [sp, #8]
 120:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 256              		.loc 1 120 3 is_stmt 1 view .LVU87
 257              		.loc 1 120 7 is_stmt 0 view .LVU88
 258 0042 6946     		mov	r1, sp
 259 0044 0648     		ldr	r0, .L17
 260 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 261              	.LVL7:
 262              		.loc 1 120 6 view .LVU89
 263 004a 28B9     		cbnz	r0, .L16
 264              	.L11:
 121:Core/Src/adc.c ****   {
 122:Core/Src/adc.c ****     Error_Handler();
 123:Core/Src/adc.c ****   }
 124:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 125:Core/Src/adc.c **** 
 126:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 2 */
 127:Core/Src/adc.c **** 
 128:Core/Src/adc.c **** }
 265              		.loc 1 128 1 view .LVU90
 266 004c 05B0     		add	sp, sp, #20
 267              	.LCFI6:
 268              		.cfi_remember_state
 269              		.cfi_def_cfa_offset 4
 270              		@ sp needed
 271 004e 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccZiY1KG.s 			page 8


 272              	.L15:
 273              	.LCFI7:
 274              		.cfi_restore_state
 113:Core/Src/adc.c ****   }
 275              		.loc 1 113 5 is_stmt 1 view .LVU91
 276 0052 FFF7FEFF 		bl	Error_Handler
 277              	.LVL8:
 278 0056 EEE7     		b	.L12
 279              	.L16:
 122:Core/Src/adc.c ****   }
 280              		.loc 1 122 5 view .LVU92
 281 0058 FFF7FEFF 		bl	Error_Handler
 282              	.LVL9:
 283              		.loc 1 128 1 is_stmt 0 view .LVU93
 284 005c F6E7     		b	.L11
 285              	.L18:
 286 005e 00BF     		.align	2
 287              	.L17:
 288 0060 00000000 		.word	hadc2
 289 0064 00210140 		.word	1073815808
 290              		.cfi_endproc
 291              	.LFE236:
 293              		.section	.text.MX_ADC3_Init,"ax",%progbits
 294              		.align	1
 295              		.global	MX_ADC3_Init
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	MX_ADC3_Init:
 302              	.LFB237:
 129:Core/Src/adc.c **** /* ADC3 init function */
 130:Core/Src/adc.c **** void MX_ADC3_Init(void)
 131:Core/Src/adc.c **** {
 303              		.loc 1 131 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 00B5     		push	{lr}
 308              	.LCFI8:
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 14, -4
 311 0002 85B0     		sub	sp, sp, #20
 312              	.LCFI9:
 313              		.cfi_def_cfa_offset 24
 132:Core/Src/adc.c **** 
 133:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 0 */
 134:Core/Src/adc.c **** 
 135:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 0 */
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 314              		.loc 1 137 3 view .LVU95
 315              		.loc 1 137 26 is_stmt 0 view .LVU96
 316 0004 0023     		movs	r3, #0
 317 0006 0093     		str	r3, [sp]
 318 0008 0193     		str	r3, [sp, #4]
 319 000a 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccZiY1KG.s 			page 9


 320 000c 0393     		str	r3, [sp, #12]
 138:Core/Src/adc.c **** 
 139:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 1 */
 140:Core/Src/adc.c **** 
 141:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 1 */
 142:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 143:Core/Src/adc.c ****   */
 144:Core/Src/adc.c ****   hadc3.Instance = ADC3;
 321              		.loc 1 144 3 is_stmt 1 view .LVU97
 322              		.loc 1 144 18 is_stmt 0 view .LVU98
 323 000e 1348     		ldr	r0, .L25
 324 0010 134A     		ldr	r2, .L25+4
 325 0012 0260     		str	r2, [r0]
 145:Core/Src/adc.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 326              		.loc 1 145 3 is_stmt 1 view .LVU99
 327              		.loc 1 145 29 is_stmt 0 view .LVU100
 328 0014 4FF48032 		mov	r2, #65536
 329 0018 4260     		str	r2, [r0, #4]
 146:Core/Src/adc.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 330              		.loc 1 146 3 is_stmt 1 view .LVU101
 331              		.loc 1 146 25 is_stmt 0 view .LVU102
 332 001a 8360     		str	r3, [r0, #8]
 147:Core/Src/adc.c ****   hadc3.Init.ScanConvMode = DISABLE;
 333              		.loc 1 147 3 is_stmt 1 view .LVU103
 334              		.loc 1 147 27 is_stmt 0 view .LVU104
 335 001c 0361     		str	r3, [r0, #16]
 148:Core/Src/adc.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 336              		.loc 1 148 3 is_stmt 1 view .LVU105
 337              		.loc 1 148 33 is_stmt 0 view .LVU106
 338 001e 0376     		strb	r3, [r0, #24]
 149:Core/Src/adc.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 339              		.loc 1 149 3 is_stmt 1 view .LVU107
 340              		.loc 1 149 36 is_stmt 0 view .LVU108
 341 0020 80F82030 		strb	r3, [r0, #32]
 150:Core/Src/adc.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 342              		.loc 1 150 3 is_stmt 1 view .LVU109
 343              		.loc 1 150 24 is_stmt 0 view .LVU110
 344 0024 C360     		str	r3, [r0, #12]
 151:Core/Src/adc.c ****   hadc3.Init.NbrOfConversion = 1;
 345              		.loc 1 151 3 is_stmt 1 view .LVU111
 346              		.loc 1 151 30 is_stmt 0 view .LVU112
 347 0026 0122     		movs	r2, #1
 348 0028 C261     		str	r2, [r0, #28]
 152:Core/Src/adc.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 349              		.loc 1 152 3 is_stmt 1 view .LVU113
 350              		.loc 1 152 36 is_stmt 0 view .LVU114
 351 002a 80F83030 		strb	r3, [r0, #48]
 153:Core/Src/adc.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 352              		.loc 1 153 3 is_stmt 1 view .LVU115
 353              		.loc 1 153 27 is_stmt 0 view .LVU116
 354 002e 4261     		str	r2, [r0, #20]
 154:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 355              		.loc 1 154 3 is_stmt 1 view .LVU117
 356              		.loc 1 154 7 is_stmt 0 view .LVU118
 357 0030 FFF7FEFF 		bl	HAL_ADC_Init
 358              	.LVL10:
 359              		.loc 1 154 6 view .LVU119
ARM GAS  /tmp/ccZiY1KG.s 			page 10


 360 0034 60B9     		cbnz	r0, .L23
 361              	.L20:
 155:Core/Src/adc.c ****   {
 156:Core/Src/adc.c ****     Error_Handler();
 157:Core/Src/adc.c ****   }
 158:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 159:Core/Src/adc.c ****   */
 160:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 362              		.loc 1 160 3 is_stmt 1 view .LVU120
 363              		.loc 1 160 19 is_stmt 0 view .LVU121
 364 0036 0023     		movs	r3, #0
 365 0038 0093     		str	r3, [sp]
 161:Core/Src/adc.c ****   sConfig.Rank = 1;
 366              		.loc 1 161 3 is_stmt 1 view .LVU122
 367              		.loc 1 161 16 is_stmt 0 view .LVU123
 368 003a 0122     		movs	r2, #1
 369 003c 0192     		str	r2, [sp, #4]
 162:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 370              		.loc 1 162 3 is_stmt 1 view .LVU124
 371              		.loc 1 162 24 is_stmt 0 view .LVU125
 372 003e 0293     		str	r3, [sp, #8]
 163:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 373              		.loc 1 163 3 is_stmt 1 view .LVU126
 374              		.loc 1 163 7 is_stmt 0 view .LVU127
 375 0040 6946     		mov	r1, sp
 376 0042 0648     		ldr	r0, .L25
 377 0044 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 378              	.LVL11:
 379              		.loc 1 163 6 view .LVU128
 380 0048 28B9     		cbnz	r0, .L24
 381              	.L19:
 164:Core/Src/adc.c ****   {
 165:Core/Src/adc.c ****     Error_Handler();
 166:Core/Src/adc.c ****   }
 167:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 2 */
 168:Core/Src/adc.c **** 
 169:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 2 */
 170:Core/Src/adc.c **** 
 171:Core/Src/adc.c **** }
 382              		.loc 1 171 1 view .LVU129
 383 004a 05B0     		add	sp, sp, #20
 384              	.LCFI10:
 385              		.cfi_remember_state
 386              		.cfi_def_cfa_offset 4
 387              		@ sp needed
 388 004c 5DF804FB 		ldr	pc, [sp], #4
 389              	.L23:
 390              	.LCFI11:
 391              		.cfi_restore_state
 156:Core/Src/adc.c ****   }
 392              		.loc 1 156 5 is_stmt 1 view .LVU130
 393 0050 FFF7FEFF 		bl	Error_Handler
 394              	.LVL12:
 395 0054 EFE7     		b	.L20
 396              	.L24:
 165:Core/Src/adc.c ****   }
 397              		.loc 1 165 5 view .LVU131
ARM GAS  /tmp/ccZiY1KG.s 			page 11


 398 0056 FFF7FEFF 		bl	Error_Handler
 399              	.LVL13:
 400              		.loc 1 171 1 is_stmt 0 view .LVU132
 401 005a F6E7     		b	.L19
 402              	.L26:
 403              		.align	2
 404              	.L25:
 405 005c 00000000 		.word	hadc3
 406 0060 00220140 		.word	1073816064
 407              		.cfi_endproc
 408              	.LFE237:
 410              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 411              		.align	1
 412              		.global	HAL_ADC_MspInit
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	HAL_ADC_MspInit:
 419              	.LVL14:
 420              	.LFB238:
 172:Core/Src/adc.c **** 
 173:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 174:Core/Src/adc.c **** {
 421              		.loc 1 174 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 48
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		.loc 1 174 1 is_stmt 0 view .LVU134
 426 0000 00B5     		push	{lr}
 427              	.LCFI12:
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 14, -4
 430 0002 8DB0     		sub	sp, sp, #52
 431              	.LCFI13:
 432              		.cfi_def_cfa_offset 56
 175:Core/Src/adc.c **** 
 176:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 433              		.loc 1 176 3 is_stmt 1 view .LVU135
 434              		.loc 1 176 20 is_stmt 0 view .LVU136
 435 0004 0023     		movs	r3, #0
 436 0006 0793     		str	r3, [sp, #28]
 437 0008 0893     		str	r3, [sp, #32]
 438 000a 0993     		str	r3, [sp, #36]
 439 000c 0A93     		str	r3, [sp, #40]
 440 000e 0B93     		str	r3, [sp, #44]
 177:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 441              		.loc 1 177 3 is_stmt 1 view .LVU137
 442              		.loc 1 177 15 is_stmt 0 view .LVU138
 443 0010 0368     		ldr	r3, [r0]
 444              		.loc 1 177 5 view .LVU139
 445 0012 364A     		ldr	r2, .L35
 446 0014 9342     		cmp	r3, r2
 447 0016 08D0     		beq	.L32
 178:Core/Src/adc.c ****   {
 179:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 180:Core/Src/adc.c **** 
ARM GAS  /tmp/ccZiY1KG.s 			page 12


 181:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 182:Core/Src/adc.c ****     /* ADC1 clock enable */
 183:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 184:Core/Src/adc.c **** 
 185:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 186:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 187:Core/Src/adc.c ****     PC0     ------> ADC1_IN10
 188:Core/Src/adc.c ****     */
 189:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 190:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 191:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 192:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 193:Core/Src/adc.c **** 
 194:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 195:Core/Src/adc.c **** 
 196:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 197:Core/Src/adc.c ****   }
 198:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC2)
 448              		.loc 1 198 8 is_stmt 1 view .LVU140
 449              		.loc 1 198 10 is_stmt 0 view .LVU141
 450 0018 354A     		ldr	r2, .L35+4
 451 001a 9342     		cmp	r3, r2
 452 001c 25D0     		beq	.L33
 199:Core/Src/adc.c ****   {
 200:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 201:Core/Src/adc.c **** 
 202:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 0 */
 203:Core/Src/adc.c ****     /* ADC2 clock enable */
 204:Core/Src/adc.c ****     __HAL_RCC_ADC2_CLK_ENABLE();
 205:Core/Src/adc.c **** 
 206:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 207:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 208:Core/Src/adc.c ****     PC1     ------> ADC2_IN11
 209:Core/Src/adc.c ****     */
 210:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 211:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 212:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 213:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 214:Core/Src/adc.c **** 
 215:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 216:Core/Src/adc.c **** 
 217:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 1 */
 218:Core/Src/adc.c ****   }
 219:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC3)
 453              		.loc 1 219 8 is_stmt 1 view .LVU142
 454              		.loc 1 219 10 is_stmt 0 view .LVU143
 455 001e 354A     		ldr	r2, .L35+8
 456 0020 9342     		cmp	r3, r2
 457 0022 42D0     		beq	.L34
 458              	.LVL15:
 459              	.L27:
 220:Core/Src/adc.c ****   {
 221:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 222:Core/Src/adc.c **** 
 223:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 0 */
 224:Core/Src/adc.c ****     /* ADC3 clock enable */
 225:Core/Src/adc.c ****     __HAL_RCC_ADC3_CLK_ENABLE();
ARM GAS  /tmp/ccZiY1KG.s 			page 13


 226:Core/Src/adc.c **** 
 227:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 228:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 229:Core/Src/adc.c ****     PA0-WKUP     ------> ADC3_IN0
 230:Core/Src/adc.c ****     */
 231:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 232:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 233:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 234:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 235:Core/Src/adc.c **** 
 236:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 237:Core/Src/adc.c **** 
 238:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 1 */
 239:Core/Src/adc.c ****   }
 240:Core/Src/adc.c **** }
 460              		.loc 1 240 1 view .LVU144
 461 0024 0DB0     		add	sp, sp, #52
 462              	.LCFI14:
 463              		.cfi_remember_state
 464              		.cfi_def_cfa_offset 4
 465              		@ sp needed
 466 0026 5DF804FB 		ldr	pc, [sp], #4
 467              	.LVL16:
 468              	.L32:
 469              	.LCFI15:
 470              		.cfi_restore_state
 183:Core/Src/adc.c **** 
 471              		.loc 1 183 5 is_stmt 1 view .LVU145
 472              	.LBB2:
 183:Core/Src/adc.c **** 
 473              		.loc 1 183 5 view .LVU146
 474 002a 0022     		movs	r2, #0
 475 002c 0192     		str	r2, [sp, #4]
 183:Core/Src/adc.c **** 
 476              		.loc 1 183 5 view .LVU147
 477 002e 324B     		ldr	r3, .L35+12
 478 0030 596C     		ldr	r1, [r3, #68]
 479 0032 41F48071 		orr	r1, r1, #256
 480 0036 5964     		str	r1, [r3, #68]
 183:Core/Src/adc.c **** 
 481              		.loc 1 183 5 view .LVU148
 482 0038 596C     		ldr	r1, [r3, #68]
 483 003a 01F48071 		and	r1, r1, #256
 484 003e 0191     		str	r1, [sp, #4]
 183:Core/Src/adc.c **** 
 485              		.loc 1 183 5 view .LVU149
 486 0040 0199     		ldr	r1, [sp, #4]
 487              	.LBE2:
 183:Core/Src/adc.c **** 
 488              		.loc 1 183 5 view .LVU150
 185:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 489              		.loc 1 185 5 view .LVU151
 490              	.LBB3:
 185:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 491              		.loc 1 185 5 view .LVU152
 492 0042 0292     		str	r2, [sp, #8]
 185:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
ARM GAS  /tmp/ccZiY1KG.s 			page 14


 493              		.loc 1 185 5 view .LVU153
 494 0044 196B     		ldr	r1, [r3, #48]
 495 0046 41F00401 		orr	r1, r1, #4
 496 004a 1963     		str	r1, [r3, #48]
 185:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 497              		.loc 1 185 5 view .LVU154
 498 004c 1B6B     		ldr	r3, [r3, #48]
 499 004e 03F00403 		and	r3, r3, #4
 500 0052 0293     		str	r3, [sp, #8]
 185:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 501              		.loc 1 185 5 view .LVU155
 502 0054 029B     		ldr	r3, [sp, #8]
 503              	.LBE3:
 185:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 504              		.loc 1 185 5 view .LVU156
 189:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 505              		.loc 1 189 5 view .LVU157
 189:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 506              		.loc 1 189 25 is_stmt 0 view .LVU158
 507 0056 0123     		movs	r3, #1
 508 0058 0793     		str	r3, [sp, #28]
 190:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 509              		.loc 1 190 5 is_stmt 1 view .LVU159
 190:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 510              		.loc 1 190 26 is_stmt 0 view .LVU160
 511 005a 0323     		movs	r3, #3
 512 005c 0893     		str	r3, [sp, #32]
 191:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 191 5 is_stmt 1 view .LVU161
 191:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 514              		.loc 1 191 26 is_stmt 0 view .LVU162
 515 005e 0992     		str	r2, [sp, #36]
 192:Core/Src/adc.c **** 
 516              		.loc 1 192 5 is_stmt 1 view .LVU163
 517 0060 07A9     		add	r1, sp, #28
 518 0062 2648     		ldr	r0, .L35+16
 519              	.LVL17:
 192:Core/Src/adc.c **** 
 520              		.loc 1 192 5 is_stmt 0 view .LVU164
 521 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 522              	.LVL18:
 523 0068 DCE7     		b	.L27
 524              	.LVL19:
 525              	.L33:
 204:Core/Src/adc.c **** 
 526              		.loc 1 204 5 is_stmt 1 view .LVU165
 527              	.LBB4:
 204:Core/Src/adc.c **** 
 528              		.loc 1 204 5 view .LVU166
 529 006a 0022     		movs	r2, #0
 530 006c 0392     		str	r2, [sp, #12]
 204:Core/Src/adc.c **** 
 531              		.loc 1 204 5 view .LVU167
 532 006e 224B     		ldr	r3, .L35+12
 533 0070 596C     		ldr	r1, [r3, #68]
 534 0072 41F40071 		orr	r1, r1, #512
 535 0076 5964     		str	r1, [r3, #68]
ARM GAS  /tmp/ccZiY1KG.s 			page 15


 204:Core/Src/adc.c **** 
 536              		.loc 1 204 5 view .LVU168
 537 0078 596C     		ldr	r1, [r3, #68]
 538 007a 01F40071 		and	r1, r1, #512
 539 007e 0391     		str	r1, [sp, #12]
 204:Core/Src/adc.c **** 
 540              		.loc 1 204 5 view .LVU169
 541 0080 0399     		ldr	r1, [sp, #12]
 542              	.LBE4:
 204:Core/Src/adc.c **** 
 543              		.loc 1 204 5 view .LVU170
 206:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 544              		.loc 1 206 5 view .LVU171
 545              	.LBB5:
 206:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 546              		.loc 1 206 5 view .LVU172
 547 0082 0492     		str	r2, [sp, #16]
 206:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 548              		.loc 1 206 5 view .LVU173
 549 0084 196B     		ldr	r1, [r3, #48]
 550 0086 41F00401 		orr	r1, r1, #4
 551 008a 1963     		str	r1, [r3, #48]
 206:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 552              		.loc 1 206 5 view .LVU174
 553 008c 1B6B     		ldr	r3, [r3, #48]
 554 008e 03F00403 		and	r3, r3, #4
 555 0092 0493     		str	r3, [sp, #16]
 206:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 556              		.loc 1 206 5 view .LVU175
 557 0094 049B     		ldr	r3, [sp, #16]
 558              	.LBE5:
 206:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 559              		.loc 1 206 5 view .LVU176
 210:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 560              		.loc 1 210 5 view .LVU177
 210:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 561              		.loc 1 210 25 is_stmt 0 view .LVU178
 562 0096 0223     		movs	r3, #2
 563 0098 0793     		str	r3, [sp, #28]
 211:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 564              		.loc 1 211 5 is_stmt 1 view .LVU179
 211:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 565              		.loc 1 211 26 is_stmt 0 view .LVU180
 566 009a 0323     		movs	r3, #3
 567 009c 0893     		str	r3, [sp, #32]
 212:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 568              		.loc 1 212 5 is_stmt 1 view .LVU181
 212:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 569              		.loc 1 212 26 is_stmt 0 view .LVU182
 570 009e 0992     		str	r2, [sp, #36]
 213:Core/Src/adc.c **** 
 571              		.loc 1 213 5 is_stmt 1 view .LVU183
 572 00a0 07A9     		add	r1, sp, #28
 573 00a2 1648     		ldr	r0, .L35+16
 574              	.LVL20:
 213:Core/Src/adc.c **** 
 575              		.loc 1 213 5 is_stmt 0 view .LVU184
ARM GAS  /tmp/ccZiY1KG.s 			page 16


 576 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 577              	.LVL21:
 578 00a8 BCE7     		b	.L27
 579              	.LVL22:
 580              	.L34:
 225:Core/Src/adc.c **** 
 581              		.loc 1 225 5 is_stmt 1 view .LVU185
 582              	.LBB6:
 225:Core/Src/adc.c **** 
 583              		.loc 1 225 5 view .LVU186
 584 00aa 0022     		movs	r2, #0
 585 00ac 0592     		str	r2, [sp, #20]
 225:Core/Src/adc.c **** 
 586              		.loc 1 225 5 view .LVU187
 587 00ae 124B     		ldr	r3, .L35+12
 588 00b0 596C     		ldr	r1, [r3, #68]
 589 00b2 41F48061 		orr	r1, r1, #1024
 590 00b6 5964     		str	r1, [r3, #68]
 225:Core/Src/adc.c **** 
 591              		.loc 1 225 5 view .LVU188
 592 00b8 596C     		ldr	r1, [r3, #68]
 593 00ba 01F48061 		and	r1, r1, #1024
 594 00be 0591     		str	r1, [sp, #20]
 225:Core/Src/adc.c **** 
 595              		.loc 1 225 5 view .LVU189
 596 00c0 0599     		ldr	r1, [sp, #20]
 597              	.LBE6:
 225:Core/Src/adc.c **** 
 598              		.loc 1 225 5 view .LVU190
 227:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 599              		.loc 1 227 5 view .LVU191
 600              	.LBB7:
 227:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 601              		.loc 1 227 5 view .LVU192
 602 00c2 0692     		str	r2, [sp, #24]
 227:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 603              		.loc 1 227 5 view .LVU193
 604 00c4 196B     		ldr	r1, [r3, #48]
 605 00c6 41F00101 		orr	r1, r1, #1
 606 00ca 1963     		str	r1, [r3, #48]
 227:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 607              		.loc 1 227 5 view .LVU194
 608 00cc 1B6B     		ldr	r3, [r3, #48]
 609 00ce 03F00103 		and	r3, r3, #1
 610 00d2 0693     		str	r3, [sp, #24]
 227:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 611              		.loc 1 227 5 view .LVU195
 612 00d4 069B     		ldr	r3, [sp, #24]
 613              	.LBE7:
 227:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 614              		.loc 1 227 5 view .LVU196
 231:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 615              		.loc 1 231 5 view .LVU197
 231:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 616              		.loc 1 231 25 is_stmt 0 view .LVU198
 617 00d6 0123     		movs	r3, #1
 618 00d8 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccZiY1KG.s 			page 17


 232:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 619              		.loc 1 232 5 is_stmt 1 view .LVU199
 232:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 620              		.loc 1 232 26 is_stmt 0 view .LVU200
 621 00da 0323     		movs	r3, #3
 622 00dc 0893     		str	r3, [sp, #32]
 233:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 623              		.loc 1 233 5 is_stmt 1 view .LVU201
 233:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 624              		.loc 1 233 26 is_stmt 0 view .LVU202
 625 00de 0992     		str	r2, [sp, #36]
 234:Core/Src/adc.c **** 
 626              		.loc 1 234 5 is_stmt 1 view .LVU203
 627 00e0 07A9     		add	r1, sp, #28
 628 00e2 0748     		ldr	r0, .L35+20
 629              	.LVL23:
 234:Core/Src/adc.c **** 
 630              		.loc 1 234 5 is_stmt 0 view .LVU204
 631 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 632              	.LVL24:
 633              		.loc 1 240 1 view .LVU205
 634 00e8 9CE7     		b	.L27
 635              	.L36:
 636 00ea 00BF     		.align	2
 637              	.L35:
 638 00ec 00200140 		.word	1073815552
 639 00f0 00210140 		.word	1073815808
 640 00f4 00220140 		.word	1073816064
 641 00f8 00380240 		.word	1073887232
 642 00fc 00080240 		.word	1073874944
 643 0100 00000240 		.word	1073872896
 644              		.cfi_endproc
 645              	.LFE238:
 647              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 648              		.align	1
 649              		.global	HAL_ADC_MspDeInit
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu fpv4-sp-d16
 655              	HAL_ADC_MspDeInit:
 656              	.LVL25:
 657              	.LFB239:
 241:Core/Src/adc.c **** 
 242:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 243:Core/Src/adc.c **** {
 658              		.loc 1 243 1 is_stmt 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		.loc 1 243 1 is_stmt 0 view .LVU207
 663 0000 08B5     		push	{r3, lr}
 664              	.LCFI16:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 3, -8
 667              		.cfi_offset 14, -4
 244:Core/Src/adc.c **** 
ARM GAS  /tmp/ccZiY1KG.s 			page 18


 245:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 668              		.loc 1 245 3 is_stmt 1 view .LVU208
 669              		.loc 1 245 15 is_stmt 0 view .LVU209
 670 0002 0368     		ldr	r3, [r0]
 671              		.loc 1 245 5 view .LVU210
 672 0004 144A     		ldr	r2, .L45
 673 0006 9342     		cmp	r3, r2
 674 0008 06D0     		beq	.L42
 246:Core/Src/adc.c ****   {
 247:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 248:Core/Src/adc.c **** 
 249:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 250:Core/Src/adc.c ****     /* Peripheral clock disable */
 251:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 252:Core/Src/adc.c **** 
 253:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 254:Core/Src/adc.c ****     PC0     ------> ADC1_IN10
 255:Core/Src/adc.c ****     */
 256:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 257:Core/Src/adc.c **** 
 258:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 259:Core/Src/adc.c **** 
 260:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 261:Core/Src/adc.c ****   }
 262:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC2)
 675              		.loc 1 262 8 is_stmt 1 view .LVU211
 676              		.loc 1 262 10 is_stmt 0 view .LVU212
 677 000a 144A     		ldr	r2, .L45+4
 678 000c 9342     		cmp	r3, r2
 679 000e 0ED0     		beq	.L43
 263:Core/Src/adc.c ****   {
 264:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 265:Core/Src/adc.c **** 
 266:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 0 */
 267:Core/Src/adc.c ****     /* Peripheral clock disable */
 268:Core/Src/adc.c ****     __HAL_RCC_ADC2_CLK_DISABLE();
 269:Core/Src/adc.c **** 
 270:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 271:Core/Src/adc.c ****     PC1     ------> ADC2_IN11
 272:Core/Src/adc.c ****     */
 273:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_1);
 274:Core/Src/adc.c **** 
 275:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 276:Core/Src/adc.c **** 
 277:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 1 */
 278:Core/Src/adc.c ****   }
 279:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC3)
 680              		.loc 1 279 8 is_stmt 1 view .LVU213
 681              		.loc 1 279 10 is_stmt 0 view .LVU214
 682 0010 134A     		ldr	r2, .L45+8
 683 0012 9342     		cmp	r3, r2
 684 0014 15D0     		beq	.L44
 685              	.LVL26:
 686              	.L37:
 280:Core/Src/adc.c ****   {
 281:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 282:Core/Src/adc.c **** 
ARM GAS  /tmp/ccZiY1KG.s 			page 19


 283:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 0 */
 284:Core/Src/adc.c ****     /* Peripheral clock disable */
 285:Core/Src/adc.c ****     __HAL_RCC_ADC3_CLK_DISABLE();
 286:Core/Src/adc.c **** 
 287:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 288:Core/Src/adc.c ****     PA0-WKUP     ------> ADC3_IN0
 289:Core/Src/adc.c ****     */
 290:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 291:Core/Src/adc.c **** 
 292:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 293:Core/Src/adc.c **** 
 294:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 1 */
 295:Core/Src/adc.c ****   }
 296:Core/Src/adc.c **** }
 687              		.loc 1 296 1 view .LVU215
 688 0016 08BD     		pop	{r3, pc}
 689              	.LVL27:
 690              	.L42:
 251:Core/Src/adc.c **** 
 691              		.loc 1 251 5 is_stmt 1 view .LVU216
 692 0018 02F58C32 		add	r2, r2, #71680
 693 001c 536C     		ldr	r3, [r2, #68]
 694 001e 23F48073 		bic	r3, r3, #256
 695 0022 5364     		str	r3, [r2, #68]
 256:Core/Src/adc.c **** 
 696              		.loc 1 256 5 view .LVU217
 697 0024 0121     		movs	r1, #1
 698 0026 0F48     		ldr	r0, .L45+12
 699              	.LVL28:
 256:Core/Src/adc.c **** 
 700              		.loc 1 256 5 is_stmt 0 view .LVU218
 701 0028 FFF7FEFF 		bl	HAL_GPIO_DeInit
 702              	.LVL29:
 703 002c F3E7     		b	.L37
 704              	.LVL30:
 705              	.L43:
 268:Core/Src/adc.c **** 
 706              		.loc 1 268 5 is_stmt 1 view .LVU219
 707 002e 0E4A     		ldr	r2, .L45+16
 708 0030 536C     		ldr	r3, [r2, #68]
 709 0032 23F40073 		bic	r3, r3, #512
 710 0036 5364     		str	r3, [r2, #68]
 273:Core/Src/adc.c **** 
 711              		.loc 1 273 5 view .LVU220
 712 0038 0221     		movs	r1, #2
 713 003a 0A48     		ldr	r0, .L45+12
 714              	.LVL31:
 273:Core/Src/adc.c **** 
 715              		.loc 1 273 5 is_stmt 0 view .LVU221
 716 003c FFF7FEFF 		bl	HAL_GPIO_DeInit
 717              	.LVL32:
 718 0040 E9E7     		b	.L37
 719              	.LVL33:
 720              	.L44:
 285:Core/Src/adc.c **** 
 721              		.loc 1 285 5 is_stmt 1 view .LVU222
 722 0042 02F58B32 		add	r2, r2, #71168
ARM GAS  /tmp/ccZiY1KG.s 			page 20


 723 0046 536C     		ldr	r3, [r2, #68]
 724 0048 23F48063 		bic	r3, r3, #1024
 725 004c 5364     		str	r3, [r2, #68]
 290:Core/Src/adc.c **** 
 726              		.loc 1 290 5 view .LVU223
 727 004e 0121     		movs	r1, #1
 728 0050 0648     		ldr	r0, .L45+20
 729              	.LVL34:
 290:Core/Src/adc.c **** 
 730              		.loc 1 290 5 is_stmt 0 view .LVU224
 731 0052 FFF7FEFF 		bl	HAL_GPIO_DeInit
 732              	.LVL35:
 733              		.loc 1 296 1 view .LVU225
 734 0056 DEE7     		b	.L37
 735              	.L46:
 736              		.align	2
 737              	.L45:
 738 0058 00200140 		.word	1073815552
 739 005c 00210140 		.word	1073815808
 740 0060 00220140 		.word	1073816064
 741 0064 00080240 		.word	1073874944
 742 0068 00380240 		.word	1073887232
 743 006c 00000240 		.word	1073872896
 744              		.cfi_endproc
 745              	.LFE239:
 747              		.comm	hadc3,72,4
 748              		.comm	hadc2,72,4
 749              		.comm	hadc1,72,4
 750              		.text
 751              	.Letext0:
 752              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 753              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 754              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 755              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 756              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 757              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 758              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 759              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 760              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 761              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc_ex.h"
 762              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 763              		.file 13 "Core/Inc/adc.h"
 764              		.file 14 "Core/Inc/main.h"
ARM GAS  /tmp/ccZiY1KG.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccZiY1KG.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccZiY1KG.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccZiY1KG.s:169    .text.MX_ADC1_Init:0000000000000084 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccZiY1KG.s:176    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccZiY1KG.s:183    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccZiY1KG.s:288    .text.MX_ADC2_Init:0000000000000060 $d
                            *COM*:0000000000000048 hadc2
     /tmp/ccZiY1KG.s:294    .text.MX_ADC3_Init:0000000000000000 $t
     /tmp/ccZiY1KG.s:301    .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
     /tmp/ccZiY1KG.s:405    .text.MX_ADC3_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc3
     /tmp/ccZiY1KG.s:411    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccZiY1KG.s:418    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccZiY1KG.s:638    .text.HAL_ADC_MspInit:00000000000000ec $d
     /tmp/ccZiY1KG.s:648    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccZiY1KG.s:655    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccZiY1KG.s:738    .text.HAL_ADC_MspDeInit:0000000000000058 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
